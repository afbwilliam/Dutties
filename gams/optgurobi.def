*
* optgurobi.def
*

aggregate integer 0 1 0 1 1 6 Enables or disables aggregation in presolve
aggfill integer 0 10 0 maxint 1 6 Controls the amount of fill allowed during presolve aggregation
bariterlimit integer 0 maxint 0 maxint 1 1 Limits the number of barrier iterations performed
barconvtol double 0 1e-8 1e-10 1.0 1 2 Controls barrier termination
barcorrectors integer 0 -1 -1 maxint 1 4 Limits the number of central corrections performed in each barrier iteration
barhomogeneous enumint 0 -1 1 4
 -1 1 Auto
 0 1 Homogeneous Barrier off
 1 1 Force Homogeneous Barrier on
barorder enumint 0 -1 1 4 Chooses the barrier sparse matrix fill-reducing algorithm
 -1 1 Auto
 0 1 Approximate Minimum Degree ordering
 1 1 Nested Dissection ordering
barqcpconvtol double 0 1e-6 0 1.0 1 2 Convergence tolerance for the barrier algorithm when solving a QCP
branchdir enumint 0 0 1 5 Determines which child node is explored first in the branch-and-cut search
 -1 1 Always explore the down branch first
 0 1 Automatic
 1 1 Always explore the up branch first
cliquecuts enumint 0 -1 1 5 Controls clique cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
covercuts enumint 0 -1 1 5 Controls cover cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
crossover integer 0 -1 -1 4 1 4 Determines the crossover strategy used to transform the barrier solution into a basic solution
crossoverbasis integer 0 0 0 1 1 4 Determines the initial basis construction strategy for crossover
cutaggpasses integer 0 -1 -1 maxint 1 5 Maximum number of aggregation passes during cut generation
cutoff double 0 0 mindouble maxdouble 1 1 Sets a target objective value
cutpasses integer 0 -1 -1 maxint 1 5 Maximum number of cutting plane passes performed during root cut generation
cuts enumint 0 -1 1 5 Global cut generation control
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
 3 1 Very aggressive
displayinterval integer 0 5 1 maxint 1 6 Controls the frequency at which log lines are printed in seconds
dumpsolution string 1 "" 1 6 Controls export of alternate MIP solutions
feasibilitytol double 0 1e-6 1e-9 1e-2 1 2 Primal feasibility tolerance
feasopt boolean 1 0 1 6 Computes a minimum-cost relaxation to make an infeasible model feasible
 0 Turns Feasible Relaxation off
 1 Turns Feasible Relaxation on
feasoptmode enumint 1 0 1 6 Mode of FeasOpt
 0 1 Minimize sum of relaxations
 1 1 Minimize sum of relaxations and optimize
 2 1 Minimize number of relaxations
 3 1 Minimize number of relaxations and optimize
 4 1 Minimize sum of squares of relaxations
 5 1 Minimize sum of squares of relaxations and optimize
.feaspref double 1 1 0 1e+020 1 6 feasibility preference
fixoptfile string 1 "" 1 6 Option file for fixed problem optimization
flowcovercuts enumint 0 -1 1 5 Controls flow cover cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
flowpathcuts enumint 0 -1 1 5 Controls flow path cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
gomorypasses integer 0 -1 -1 maxint 1 5 Maximum number of Gomory cut passes
gubcovercuts enumint 0 -1 1 5 Controls GUB cover cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
heuristics double 0 0.05 0 1 1 5 Controls the amount of time spent in MIP heuristics
iis boolean 1 0 1 6 Run the Irreducible Inconsistent Subsystem (IIS) finder if the problem is infeasible
 0 Do not run the IIS finder
 1 Run the IIS finder
iismethod integer 0 -1 -1 1 1 6 Controls use of IIS method
impliedcuts enumint 0 -1 1 5 Controls implied bound cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
improvestartgap double 0 maxdouble 0 maxdouble 1 5 Optimality gap at which the MIP solver resets a few MIP parameters
improvestartnodes double 0 maxdouble 0 maxdouble 1 5 Solution improvement strategy control
improvestarttime double 0 maxdouble 0 maxdouble 1 5 Elapsed time after which the MIP solver resets a few MIP parameters
intfeastol double 0 1e-5 1e-9 1e-1 1 2 Integer feasibility tolerance
iterationlimit double 0 maxdouble 0 maxdouble 1 1 Limits the number of simplex iterations performed
kappa boolean 1 0 1 6 Display approximate condition number estimates for the optimal simplex basis
 0 Do not compute and display approximate condition number
 1 Compute and display approximate condition number
kappaexact boolean 1 0 1 6 Display exact condition number estimates for the optimal simplex basis
 0 Do not compute and display exact condition number
 1 Compute and display exact condition number
markowitztol double 0 0.0078125 1e-4 0.999 1 2 Threshold pivoting tolerance
method enumint 0 -1 1 6 Algorithm used to solve continuous models
 -1 1 Automatic
 0 1 Primal simplex
 1 1 Dual simplex
 2 1 Barrier
 3 1 Concurrent
 4 1 Deterministic concurrent
miqcpmethod enumint 0 -1 1 5 Determines whether outer approximation is used to solve an MIQCP model.
 -1 1 Auto
 0 1 Linearized, outer-approximation approach
 1 1 Continuous QCP relaxations at each node
minrelnodes integer 0 0 0 maxint 1 5 Number of nodes to explore in the Minimum Relaxation heuristic
mipfocus enumint 0 0 1 5 Controls the focus of the MIP solver
 0 1 Balance between finding good feasible solutions and proving optimality
 1 1 Focus towards finding feasible solutions
 2 1 Focus towards proving optimality
 3 1 Focus on moving the best objective bound
mipgap double 0 1e-4 0 maxdouble 1 2 Relative MIP optimality gap
mipgapabs double 0 1e-10 0 maxdouble 1 2 Absolute MIP optimality gap
mipsepcuts enumint 0 -1 1 5 Controls MIP separation cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
mipstart boolean 1 0 1 6 Use mip starting values
 0 Do not use the values
 1 Use the values
miptrace string 1 "" 0 6 Filename of MIP trace file
miptracenode integer 1 100 0 maxint 0 6 Node interval when a trace record is written
miptracetime double 1 1 0 maxdouble 0 6 Time interval when a trace record is written
mircuts enumint 0 -1 1 5 Controls MIR cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
modkcuts integer 0 -1 -1 2 1 5 Controls the generation of mod-k cuts
networkcuts enumint 0 -1 1 5 Controls network cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
names boolean 1 1 1 6 Indicator for loading names
 0 Do not load GAMS names into Gurobi model
 1 Load GAMS names into Gurobi model
nobounds immediate nobounds 0 6 Ignores bounds on options
nodefiledir string 0 "." 1 5 Nodefile directory
nodefilestart double 0 maxdouble 0 maxdouble 1 5 Nodefile starting indicator
nodelimit double 0 maxdouble 0 maxdouble 1 1 Limits the number of MIP nodes explored
nodemethod enumint 0 1 1 5 Algorithm used to solve node relaxations in a MIP model
 0 1 Primal simplex
 1 1 Dual simplex
 2 1 Barrier
normadjust integer 0 -1 -1 3 1 3 Pricing norm variants
objscale double 0 0 -1 maxdouble 1 3 Objective coefficients scaling
optimalitytol double 0 1e-6 1e-9 1e-2 1 2 Dual feasibility tolerance
outputflag integer 0 1 0 1 0 6 Enables or disables engine output
perturbvalue double 0 0.0002 0 0.01 1 3 Magnitude of simplex perturbation when required
precrush integer 0 0 0 1 1 6 Presolve constraint option
predual integer 0 -1 -1 2 1 6 Controls whether presolve forms the dual of a continuous model
predeprow integer 0 -1 -1 1 1 6 Controls the presolve dependent row reduction
premiqpmethod enumint 0 -1 1 6 Transformation presolve performs on MIQP models
 -1 1 Auto
 0 1 Always leaves the model as an MIQP
 1 1 Attempts to transform the model into an MILP
prepasses integer 0 -1 -1 maxint 1 6 Controls the number of passes performed by presolve
preqlinearize enumint 0 -1 1 6 Controls linearization of Q matrices in the quadratic constraints or a quadratic objective
 -1 1 Auto
 0 1 Linearization off
 1 1 Force Linearization on
presolve enumint 0 -1 1 6 Controls the presolve level
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
presparsify boolean 0 0 1 5 Enables the presolve sparsify reduction for MIP models
 0 Disable the presolve sparsify reduction
 1 Enable the presolve sparsify reduction
printoptions boolean 1 0 1 6 List values of all options to GAMS listing file
 0 Do not list option values to GAMS listing file
 1 List option values to GAMS listing file
.prior double 1 1 1 maxdouble 1 5 Branching priorities
probread string 1 "" 0 6 Supply a problem via a Gurobi input file
psdtol double 0 1e-6 0 maxdouble 1 2 limit on the amount of diagonal perturbation
pumppasses integer 0 0 0 maxint 1 5 Number of passes of the feasibility pump heuristic
qcpdual boolean 0 1 1 4 Determines whether dual variable values are computed for QCP models
 0 Compute dual for QCP problem
 1 Do not compute dual for QCP problem
quad integer 0 -1 -1 1 1 3 Quad precision computation in simplex
readfile immediate readfile 0 6 Read secondary option file
readparams string 1 "" 1 6 Read Gurobi parameter file
resultfile string 0 "" 0 6 Specifies the name of the result file to be written upon completion of optimization
rerun enumint 1 0 1 6 Resolve without presolve in case of unbounded or infeasible
 -1 1 No
 0 1 Auto
 1 1 Yes
rins integer 0 -1 -1 maxint 1 5 Frequency of the RINS heuristic
scaleflag integer 0 1 0 1 1 3 Enables or disables model scaling
seed integer 0 0 0 maxint 1 6 Random number seed
sensitivity boolean 1 0 1 6 Provide sensitivity information
 0 Do not provide sensitivity information
 1 Provide sensitivity information
sifting enumint 0 -1 1 3 Sifting within dual simplex
 -1 1 Auto
 0 1 Off
 1 1 Moderate
 2 1 Agressive
siftmethod enumint 0 -1 1 3 LP method used to solve sifting sub-problems
 -1 1 Auto
 0 1 Primal Simplex
 1 1 Dual Simplex
 2 1 Barrier
simplexpricing enumint 0 -1 1 3 Determines variable pricing strategy
 -1 1 Auto
 0 1 Partial Pricing
 1 1 Steepest Edge
 2 1 Devex
 3 1 Quick-Start Steepest Edge
solutionlimit integer 0 maxint 1 maxint 1 1 Limits the number of feasible solutions found
solvefixed boolean 1 1 1 6 Indicator for solving the fixed problem for a MIP to get a dual solution
 0 Do not solve the fixed problem
 1 Solve the fixed problem
submipcuts integer 0 -1 -1 2 1 5 Controls the generation of sub-MIP cutting planes
submipnodes integer 0 500 0 maxint 1 5 Limits the number of nodes explored by the heuristics
symmetry enumint 0 -1 1 5 Controls MIP symmetry detection
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
threads integer 0 0 -128 maxint 1 6 Controls the number of threads to apply to parallel MIP or Barrier
timelimit double 0 maxdouble 0 maxdouble 1 1 Limits the total time expended in seconds
usebasis enumint 1 0 1 6 Use basis from GAMS
 0 1 No basis
 1 1 Supply basis if basis is full otherwise provide primal dual solution
 2 1 Supply basis iff basis is full
 3 1 Supply primal dual solution
varbranch enumint 0 -1 1 5 Controls the branch variable selection strategy
 -1 1 Auto
 0 1 Pseudo Reduced Cost Branching
 1 1 Pseudo Shadow Price Branching
 2 1 Maximum Infeasibility Branching
 3 1 Strong Branching
writeparams string 1 "" 1 6 Write Gurobi parameter file
writeprob string 1 "" 1 6 Save the problem instance
zerohalfcuts enumint 0 -1 1 5 Controls zero-half cut generation
 -1 1 Auto
 0 1 Off
 1 1 Conservative
 2 1 Aggressive
zeroobjnodes integer 0 0 0 maxint 1 5 Number of nodes to explore in the zero objective heuristic
*
* synonym section
*
lpmethod synonym method
rootmethod synonym method
*
* deprecated section
*
gurobi3 deprecated
 lpmethod Use option method to specify algorithm used for LP and QP problems
 rootmethod Use option method to specify algorithm used for root node
*
* Groups
* <group-ident> group <group-number <help-context> <help-text>
*
Termination group 1 1 Termination options
Tolerances group 2 1 Tolerance options
Simplex group 3 1 Simplex options
Barrier group 4 1 Barrier options
MIPoptions group 5 1 MIP options
Other group 6 1 Other options
*** End of file
