$TITLE 'MPSWRITE test suite - basic option reading test' (MPSWRIT1,SEQ=259)

  Sets
       i   canning plants   / seattle, san-diego /
       j   markets          / new-york, chicago, topeka / ;

  Parameters

       a(i)  capacity of plant i in cases
         /    seattle     350
              san-diego   600  /

       b(j)  demand at market j in cases
         /    new-york    325
              chicago     300
              topeka      275  / ;

  Table d(i,j)  distance in thousands of miles
                    new-york       chicago      topeka
      seattle          2.5           1.7          1.8
      san-diego        2.5           1.8          1.4  ;

  Scalar f  freight in dollars per case per thousand miles  /90/ ;

  Parameter c(i,j)  transport cost in thousands of dollars per case ;

            c(i,j) = f * d(i,j) / 1000 ;

  Variables
       x(i,j)  shipment quantities in cases
       z       total transportation costs in thousands of dollars ;

  Positive Variable x ;

  Equations
       cost        define objective function
       supply(i)   observe supply limit at plant i
       demand(j)   satisfy demand at market j ;

  cost ..        z  =e=  sum((i,j), c(i,j)*x(i,j)) ;

  supply(i) ..   sum(j, x(i,j))  =l=  a(i) ;

  demand(j) ..   sum(i, x(i,j))  =g=  b(j) ;

  Model transport /all/ ;
$onecho > mpswrite.opt
nametyp 2
objlast 1
labperc 0
stemperc 0
labminwid 1
$offecho

$onecho > mpswrite.mps
NAME          GAMSMOD
* OBJECTIVE ROW HAS TO BE MINIMIZED
* OBJ ROW IS : +OBJ
* ROWS       :        7
* COLUMNS    :        7
* NON-ZEROES :       20
ROWS
 E  C
 L  SSE
 L  SSA
 G  DNE
 G  DCH
 G  DTO
 N  +OBJ
COLUMNS
    XSENE     C         -0.225000000
    XSENE     SSE        1.000000000
    XSENE     DNE        1.000000000
    XSECH     C         -0.153000000
    XSECH     SSE        1.000000000
    XSECH     DCH        1.000000000
    XSETO     C         -0.162000000
    XSETO     SSE        1.000000000
    XSETO     DTO        1.000000000
    XSANE     C         -0.225000000
    XSANE     SSA        1.000000000
    XSANE     DNE        1.000000000
    XSACH     C         -0.162000000
    XSACH     SSA        1.000000000
    XSACH     DCH        1.000000000
    XSATO     C         -0.126000000
    XSATO     SSA        1.000000000
    XSATO     DTO        1.000000000
    Z         C          1.000000000
    Z         +OBJ       1.000000000
RHS
    RHS       SSE        350.0000000
    RHS       SSA        600.0000000
    RHS       DNE        325.0000000
    RHS       DCH        300.0000000
    RHS       DTO        275.0000000
BOUNDS
 FR BOUND     Z
ENDATA
$offecho
$onecho > gams.mps
this is a bad mps file
$offecho

transport.optfile=1 ; option lp=mpswrite;
Solve transport using lp minimizing z ;

abort$(transport.solvestat <> %solvestat.NormalCompletion% or transport.modelstat <> %modelstat.NoSolutionReturned%) 'wrong status returned';
* need the -b because mpswrite has some trailing blanks
execute '=diff -b gams.mps mpswrite.mps';

abort$errorlevel 'mps diff failed';
