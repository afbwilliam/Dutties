# generated by src\gamsx\goptwrp.gms

'''
@mainpage GAMS Python API
@version 24.0
@section INTRO Overview
    <p>The gams namespace provides objects to interact with the General Algebraic Modeling
    System (GAMS). Objects in this namespace allow convenient exchange of input data
    and model results (GamsDatabase), help to create and run GAMS models (GamsJob),
    that can be customized by  GAMS options (GamsOptions). Furthermore, it
    introduces a way to solve a sequence of closely related model instances in the
    most efficient way (GamsModelInstance).</p>
    <p>A GAMS program can include other source files (e.g. $include), load data from
    GDX files (e.g. $GDXIN or execute_load), and create PUT files. All these files
    can be specified with a (relative) path and therefore an anchor into the file
    system is required. The base class GamsWorkspace manages the anchor to the file
    system. If external file communication is not an issue in a particular Python
    application, temporary directories and files will be managed by objects in the
    namespace.</p>
    <p>With the exception of GamsWorkspace the objects in the gams namespace cannot be
    accessed across different threads unless the instance is locked. The classes themself
    are thread safe and multiple objects of the class can be used from different threads
    (see below for restrictions on solvers that are not thread safe within the
    GamsModelInstance class).</p>
    <p>This alpha version of the gams namespace lacks support for the following GAMS
    components:</p>
    <p>Acronyms, domain checking, support for GAMS compilation/execution errors
    (GamsJob.run just throws an exception), structured access to listing file, and
    proper support for solver options.</p>
    <p>Currently only CplexD and Gurobi fully utilize the power of solving
    GamsModelInstances. Some solvers will not even work in a multi-threaded
    application using GamsModelInstances. For some solvers this is unavoidable
    because the solver library is not thread safe (e.g.  MINOS), other solvers are
    in principle thread safe but the GAMS link is not (e.g. Cplex, note there is a
    thread safe version of Cplex called CplexD which lack some minor features e.g.
    support for BCH framework). Moreover, GamsModelInstances are not available for quadratic
    model types (QCP, MIQCP, RMIQCP).</p>
@section GETTINGSTARTED Getting started
    <p>The object oriented GAMS Python API is built on top of the different low level
    component API's and provides convenient access to GAMS from within Python.
    Examples using the API are located in 'apifiles/Python' while the API itself is
    found in 'apifiles/Python/api'. The GAMS Python API requires Python 2.7. The
    bitness of the Python version has to be the same as the bitness of the GAMS system.
    Assuming that the current directory is  <Path/To/GAMS>/apifiles/Python the API
    can be used as follows:
    </p>
    - Installing the API and the required low level API's to Python site-packages:
      \verbatim
      cd api && python setup.py install && cd ..
      \endverbatim
    - Using the API without installing:
      \verbatim
      export PYTHONPATH=api  (on Windows: set PYTHONPATH=api)
      \endverbatim
    <p>Note that on non windows platforms it is required to set the load library path to the GAMS
    system directory to run scripts using the GAMS Python API. </p>
    <p> Linux: @code export LD_LIBRARY_PATH=<Path/To/GAMS>:$LD_LIBRARY_PATH @endcode </p>
    <p> OS X: @code export DYLD_LIBRARY_PATH=<Path/To/GAMS>:$DYLD_LIBRARY_PATH @endcode </p>
    Running the transport1.py example:
    </p>
    \verbatim python transport1.py \endverbatim

'''

__all__ = ["GamsCheckpoint", "GamsDatabase", "GamsJob", "UpdateAction", "SymbolUpdateType", "GamsModifier", "GamsModelInstanceOpt", "GamsModelInstance", "Action", "CharSet", "GamsOptions", \
           "GamsEquationRecord", "GamsParameterRecord", "GamsSetRecord", "GamsVariableRecord", "GamsVariable", "GamsParameter", "GamsSet", "GamsEquation", "EquType", "VarType", "SolveStat", \
           "ModelStat", "GamsWorkspace", "GamsException", \
           "Action", "StepSum", "DFormat", "TFormat", "Case", "ForceWork", "StringChk", "CharSet", "Keep", "SysOut", "SolPrint", "HoldFixed", "ExecMode", "InteractiveSolver", "FileCase", "SavePoint", "SolveLink", "Sys11", "ZeroResRep", "gdxCompress", "gdxConvert" ]

from workspace import *
from database import *
from options import *
from execution import *
