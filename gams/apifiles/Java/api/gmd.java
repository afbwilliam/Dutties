/*  Java code generated by apiwrapper for GAMS Version 24.0.2 */
package com.gams.api;

public class gmd {
   public static final int GMD_PARAM  = 0; /* gmdActionType */
   public static final int GMD_UPPER  = 1;
   public static final int GMD_LOWER  = 2;
   public static final int GMD_FIXED  = 3;
   public static final int GMD_PRIMAL = 4;
   public static final int GMD_DUAL   = 5;

   public static final int GMD_DEFAULT    = 0; /* gmdUpdateType */
   public static final int GMD_BASECASE   = 1;
   public static final int GMD_ACCUMULATE = 2;

   public static final int GMD_NRSYMBOLS = 0; /* gmdInfoX */
   public static final int GMD_NRUELS    = 1;

   public static final int GMD_NAME      = 0; /* gmdSymInfo */
   public static final int GMD_DIM       = 1;
   public static final int GMD_TYPE      = 2;
   public static final int GMD_NRRECORDS = 3;
   public static final int GMD_USERINFO  = 4;
   public static final int GMD_EXPLTEXT  = 5;

   private long gmdPtr = 0;
   public native static int    GetReady (String[] msg);
   public native static int    GetReadyD(String dirName, String[] msg);
   public native static int    GetReadyL(String libName, String[] msg);
   public native int    Create   (String[] msg);
   public native int    CreateD  (String dirName, String[] msg);
   public native int    CreateDD (String dirName, String[] msg);
   public native int    CreateL  (String libName, String[] msg);
   public native int    Free     ();
   public native boolean    InitFromGDX(String fileName);
   public native boolean    InitFromDict(long gmoPtr, String []msg);
   public native boolean    CloseGDX(boolean loadRemain);
   public native long    AddSymbol(String symName, int aDim, int type, int userInfo, String explText);
   public native long    FindSymbol(String symName);
   public native long    GetSymbolByIndex(int idx);
   public native boolean    ClearSymbol(long symPtr);
   public native boolean    CopySymbol(long tarSymPtr, long srcSymPtr, String []msg);
   public native long    FindRecord(long symPtr, int aDim, String []keyStr);
   public native long    FindFirstRecord(long symPtr);
   public native long    FindFirstRecordSlice(long symPtr, int aDim, String []keyStr);
   public native long    FindLastRecord(long symPtr);
   public native long    FindLastRecordSlice(long symPtr, int aDim, String []keyStr);
   public native boolean    RecordMoveNext(long symIterPtr);
   public native boolean    RecordMovePrev(long symIterPtr);
   public native void    GetElemText(long symIterPtr, String []txt);
   public native double    GetLevel(long symIterPtr);
   public native double    GetLower(long symIterPtr);
   public native double    GetUpper(long symIterPtr);
   public native double    GetMarginal(long symIterPtr);
   public native double    GetScale(long symIterPtr);
   public native void    SetElemText(long symIterPtr, String txt);
   public native void    SetLevel(long symIterPtr, double value);
   public native void    SetLower(long symIterPtr, double value);
   public native void    SetUpper(long symIterPtr, double value);
   public native void    SetMarginal(long symIterPtr, double value);
   public native void    SetScale(long symIterPtr, double value);
   public native long    AddRecord(long symPtr, int aDim, String []keyStr);
   public native boolean    DeleteRecord(long symIterPtr);
   public native boolean    GetKeys(long symIterPtr, int aDim, String []keyStr);
   public native long    CopySymbolIterator(long symIterPtr);
   public native void    FreeSymbolIterator(long symIterPtr);
   public native void    FreeAllSymbolIterators();
   public native boolean    Info(int infoKey, int []ival, double []dval, String []sval);
   public native boolean    SymbolInfo(long symPtr, int infoKey, int []ival, double []dval, String []sval);
   public native int    SymbolType(long symPtr);
   public native boolean    WriteGDX(String fileName);
   public native void    SetSpecialValues(double []specVal);
   public native void    SetDebug(int debugLevel);
   public native boolean    InitUpdate(long gmoPtr);
   public native boolean    UpdateModelSymbol(long gamsSymPtr, int actionType, long dataSymPtr, int updateType, int []noMatchCnt);
   public native boolean    CallSolver(String solvername);
   public        long    GetgmdPtr(){ return gmdPtr;}
   public gmd () { }
   public gmd (long gmdPtr) {
      this.gmdPtr = gmdPtr;
   }
   static
   {
      try
      {
         if (System.getProperty("os.arch").toLowerCase().indexOf("64") >= 0 || System.getProperty("os.arch").toLowerCase().indexOf("sparcv9") >= 0)
         {
            System.loadLibrary("gmdjni64");
         }
         else
         {
            System.loadLibrary("gmdjni");
         }
      }
      catch (UnsatisfiedLinkError ex)
      {
         ex.printStackTrace();
         throw (ex);
      }
   }
}
