/*  Java code generated by apiwrapper for GAMS Version 24.0.2 */
package com.gams.api;

public class dctm {
   public static final int dctunknownSymType = 0; /* dcttypes */
   public static final int dctfuncSymType    = 1;
   public static final int dctsetSymType     = 2;
   public static final int dctacrSymType     = 3;
   public static final int dctparmSymType    = 4;
   public static final int dctvarSymType     = 5;
   public static final int dcteqnSymType     = 6;
   public static final int dctaliasSymType   = 127;

   private long dctPtr = 0;
   public native static int    GetReady (String[] msg);
   public native static int    GetReadyD(String dirName, String[] msg);
   public native static int    GetReadyL(String libName, String[] msg);
   public native int    Create   (String[] msg);
   public native int    CreateD  (String dirName, String[] msg);
   public native int    CreateDD (String dirName, String[] msg);
   public native int    CreateL  (String libName, String[] msg);
   public native int    Free     ();
   public native int    LoadEx(String fName, String []Msg);
   public native int    LoadWithHandle(long gdxptr, String []Msg);
   public native int    NUels();
   public native int    UelIndex(String uelLabel);
   public native int    UelLabel(int uelIndex, char []q, String []uelLabel);
   public native int    NLSyms();
   public native int    SymDim(int symIndex);
   public native int    SymIndex(String symName);
   public native int    SymName(int symIndex, String []symName);
   public native int    SymText(int symIndex, char []q, String []symTxt);
   public native int    SymType(int symIndex);
   public native int    SymUserInfo(int symIndex);
   public native int    SymEntries(int symIndex);
   public native int    SymOffset(int symIndex);
   public native int    ColIndex(int symIndex, int []uelIndices);
   public native int    RowIndex(int symIndex, int []uelIndices);
   public native int    ColUels(int j, int []symIndex, int []uelIndices, int []symDim);
   public native int    RowUels(int i, int []symIndex, int []uelIndices, int []symDim);
   public native long    FindFirstRowCol(int symIndex, int []uelIndices, int []rcIndex);
   public native int    FindNextRowCol(long findHandle, int []rcIndex);
   public native void    FindClose(long findHandle);
   public native double    MemUsed();
   public native void    SetBasicCounts(int NRows, int NCols, int NBlocks);
   public native void    AddUel(String uelLabel, char q);
   public native void    AddSymbol(String symName, int symTyp, int symDim, int userInfo, String symTxt);
   public native void    AddSymbolData(int []uelIndices);
   public native void    WriteGDX(String fName, String []Msg);
   public native void    WriteGDXWithHandle(long gdxptr, String []Msg);
   public native int    NRows();
   public native int    NCols();
   public native int    LrgDim();
   public        long    GetdctPtr(){ return dctPtr;}
   public dctm () { }
   public dctm (long dctPtr) {
      this.dctPtr = dctPtr;
   }
   static
   {
      try
      {
         if (System.getProperty("os.arch").toLowerCase().indexOf("64") >= 0 || System.getProperty("os.arch").toLowerCase().indexOf("sparcv9") >= 0)
         {
            System.loadLibrary("dctmjni64");
         }
         else
         {
            System.loadLibrary("dctmjni");
         }
      }
      catch (UnsatisfiedLinkError ex)
      {
         ex.printStackTrace();
         throw (ex);
      }
   }
}
