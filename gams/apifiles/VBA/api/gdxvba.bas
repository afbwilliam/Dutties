' visual basic for applications procedure wrapper generated by generated by apiwrapper for gams version 24.0.2

#if win64 then
public declare ptrsafe sub gdxsetloadpath lib "gdxdclib64" (byval s as string)
public declare ptrsafe sub gdxgetloadpath lib "gdxdclib64" (byval s as string)
#else
public declare sub gdxsetloadpath lib "gdxdclib" (byval s as string)
public declare sub gdxgetloadpath lib "gdxdclib" (byval s as string)
#end if

#if win64 then
private declare ptrsafe function dll_gdxacronymadd lib "gdxdclib64" alias "gdxacronymadd" (byval pgdx as longptr,byref aname as byte,byref txt as byte,byval aindx as long) as long
private declare ptrsafe function dll_gdxacronymcount lib "gdxdclib64" alias "gdxacronymcount" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxacronymgetinfo lib "gdxdclib64" alias "gdxacronymgetinfo" (byval pgdx as longptr,byval n as long,byref aname as byte,byref txt as byte,byref aindx as long) as long
private declare ptrsafe function dll_gdxacronymgetmapping lib "gdxdclib64" alias "gdxacronymgetmapping" (byval pgdx as longptr,byval n as long,byref orgindx as long,byref newindx as long,byref autoindex as long) as long
private declare ptrsafe function dll_gdxacronymindex lib "gdxdclib64" alias "gdxacronymindex" (byval pgdx as longptr,byval v as double) as long
private declare ptrsafe function dll_gdxacronymname lib "gdxdclib64" alias "gdxacronymname" (byval pgdx as longptr,byval v as double,byref aname as byte) as long
private declare ptrsafe function dll_gdxacronymnextnr lib "gdxdclib64" alias "gdxacronymnextnr" (byval pgdx as longptr,byval nv as long) as long
private declare ptrsafe function dll_gdxacronymsetinfo lib "gdxdclib64" alias "gdxacronymsetinfo" (byval pgdx as longptr,byval n as long,byref aname as byte,byref txt as byte,byval aindx as long) as long
private declare ptrsafe function dll_gdxacronymvalue lib "gdxdclib64" alias "gdxacronymvalue" (byval pgdx as longptr,byval aindx as long) as double
private declare ptrsafe function dll_gdxaddalias lib "gdxdclib64" alias "gdxaddalias" (byval pgdx as longptr,byref id1 as byte,byref id2 as byte) as long
private declare ptrsafe function dll_gdxaddsettext lib "gdxdclib64" alias "gdxaddsettext" (byval pgdx as longptr,byref txt as byte,byref txtnr as long) as long
private declare ptrsafe function dll_gdxautoconvert lib "gdxdclib64" alias "gdxautoconvert" (byval pgdx as longptr,byval nv as long) as long
private declare ptrsafe function dll_gdxclose lib "gdxdclib64" alias "gdxclose" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxdataerrorcount lib "gdxdclib64" alias "gdxdataerrorcount" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxdataerrorrecord lib "gdxdclib64" alias "gdxdataerrorrecord" (byval pgdx as longptr,byval recnr as long,byref keyint as long,byref values as double) as long
private declare ptrsafe function dll_gdxdatareaddone lib "gdxdclib64" alias "gdxdatareaddone" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxdatareadfilteredstart lib "gdxdclib64" alias "gdxdatareadfilteredstart" (byval pgdx as longptr,byval synr as long,byref filteraction as long,byref nrrecs as long) as long
private declare ptrsafe function dll_gdxdatareadmap lib "gdxdclib64" alias "gdxdatareadmap" (byval pgdx as longptr,byval recnr as long,byref keyint as long,byref values as double,byref dimfrst as long) as long
private declare ptrsafe function dll_gdxdatareadmapstart lib "gdxdclib64" alias "gdxdatareadmapstart" (byval pgdx as longptr,byval synr as long,byref nrrecs as long) as long
private declare ptrsafe function dll_gdxdatareadraw lib "gdxdclib64" alias "gdxdatareadraw" (byval pgdx as longptr,byref keyint as long,byref values as double,byref dimfrst as long) as long
' private declare ptrsafe function dll_gdxdatareadrawfast lib "gdxdclib64" alias "gdxdatareadrawfast" (byval pgdx as longptr,byval synr as long,byval dp  *** function pointer not supported *** ,byref nrrecs as long) as long
private declare ptrsafe function dll_gdxdatareadrawstart lib "gdxdclib64" alias "gdxdatareadrawstart" (byval pgdx as longptr,byval synr as long,byref nrrecs as long) as long
' private declare ptrsafe function dll_gdxdatareadslice lib "gdxdclib64" alias "gdxdatareadslice" (byval pgdx as longptr,byref uelfilterstr as byte,byref dimen as long,byval dp  *** function pointer not supported *** ) as long
private declare ptrsafe function dll_gdxdatareadslicestart lib "gdxdclib64" alias "gdxdatareadslicestart" (byval pgdx as longptr,byval synr as long,byref elemcounts as long) as long
private declare ptrsafe function dll_gdxdatareadstr lib "gdxdclib64" alias "gdxdatareadstr" (byval pgdx as longptr,byref keystr as byte,byref values as double,byref dimfrst as long) as long
private declare ptrsafe function dll_gdxdatareadstrstart lib "gdxdclib64" alias "gdxdatareadstrstart" (byval pgdx as longptr,byval synr as long,byref nrrecs as long) as long
private declare ptrsafe function dll_gdxdatasliceuels lib "gdxdclib64" alias "gdxdatasliceuels" (byval pgdx as longptr,byref slicekeyint as long,byref keystr as byte) as long
private declare ptrsafe function dll_gdxdatawritedone lib "gdxdclib64" alias "gdxdatawritedone" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxdatawritemap lib "gdxdclib64" alias "gdxdatawritemap" (byval pgdx as longptr,byref keyint as long,byref values as double) as long
private declare ptrsafe function dll_gdxdatawritemapstart lib "gdxdclib64" alias "gdxdatawritemapstart" (byval pgdx as longptr,byref syid as byte,byref expltxt as byte,byval dimen as long,byval typ as long,byval userinfo as long) as long
private declare ptrsafe function dll_gdxdatawriteraw lib "gdxdclib64" alias "gdxdatawriteraw" (byval pgdx as longptr,byref keyint as long,byref values as double) as long
private declare ptrsafe function dll_gdxdatawriterawstart lib "gdxdclib64" alias "gdxdatawriterawstart" (byval pgdx as longptr,byref syid as byte,byref expltxt as byte,byval dimen as long,byval typ as long,byval userinfo as long) as long
private declare ptrsafe function dll_gdxdatawritestr lib "gdxdclib64" alias "gdxdatawritestr" (byval pgdx as longptr,byref keystr as byte,byref values as double) as long
private declare ptrsafe function dll_gdxdatawritestrstart lib "gdxdclib64" alias "gdxdatawritestrstart" (byval pgdx as longptr,byref syid as byte,byref expltxt as byte,byval dimen as long,byval typ as long,byval userinfo as long) as long
private declare ptrsafe function dll_gdxgetdllversion lib "gdxdclib64" alias "gdxgetdllversion" (byval pgdx as longptr,byref v as byte) as long
private declare ptrsafe function dll_gdxerrorcount lib "gdxdclib64" alias "gdxerrorcount" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxerrorstr lib "gdxdclib64" alias "gdxerrorstr" (byval pgdx as longptr,byval errnr as long,byref errmsg as byte) as long
private declare ptrsafe function dll_gdxfileinfo lib "gdxdclib64" alias "gdxfileinfo" (byval pgdx as longptr,byref filever as long,byref comprlev as long) as long
private declare ptrsafe function dll_gdxfileversion lib "gdxdclib64" alias "gdxfileversion" (byval pgdx as longptr,byref filestr as byte,byref producestr as byte) as long
private declare ptrsafe function dll_gdxfilterexists lib "gdxdclib64" alias "gdxfilterexists" (byval pgdx as longptr,byval filternr as long) as long
private declare ptrsafe function dll_gdxfilterregister lib "gdxdclib64" alias "gdxfilterregister" (byval pgdx as longptr,byval uelmap as long) as long
private declare ptrsafe function dll_gdxfilterregisterdone lib "gdxdclib64" alias "gdxfilterregisterdone" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxfilterregisterstart lib "gdxdclib64" alias "gdxfilterregisterstart" (byval pgdx as longptr,byval filternr as long) as long
private declare ptrsafe function dll_gdxfindsymbol lib "gdxdclib64" alias "gdxfindsymbol" (byval pgdx as longptr,byref syid as byte,byref synr as long) as long
private declare ptrsafe function dll_gdxgetelemtext lib "gdxdclib64" alias "gdxgetelemtext" (byval pgdx as longptr,byval txtnr as long,byref txt as byte,byref node as long) as long
private declare ptrsafe function dll_gdxgetlasterror lib "gdxdclib64" alias "gdxgetlasterror" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxgetmemoryused lib "gdxdclib64" alias "gdxgetmemoryused" (byval pgdx as longptr) as int64
private declare ptrsafe function dll_gdxgetspecialvalues lib "gdxdclib64" alias "gdxgetspecialvalues" (byval pgdx as longptr,byref avals as double) as long
private declare ptrsafe function dll_gdxgetuel lib "gdxdclib64" alias "gdxgetuel" (byval pgdx as longptr,byval uelnr as long,byref uel as byte) as long
private declare ptrsafe function dll_gdxmapvalue lib "gdxdclib64" alias "gdxmapvalue" (byval pgdx as longptr,byval d as double,byref sv as long) as long
private declare ptrsafe function dll_gdxopenappend lib "gdxdclib64" alias "gdxopenappend" (byval pgdx as longptr,byref filename as byte,byref producer as byte,byref errnr as long) as long
private declare ptrsafe function dll_gdxopenread lib "gdxdclib64" alias "gdxopenread" (byval pgdx as longptr,byref filename as byte,byref errnr as long) as long
private declare ptrsafe function dll_gdxopenwrite lib "gdxdclib64" alias "gdxopenwrite" (byval pgdx as longptr,byref filename as byte,byref producer as byte,byref errnr as long) as long
private declare ptrsafe function dll_gdxopenwriteex lib "gdxdclib64" alias "gdxopenwriteex" (byval pgdx as longptr,byref filename as byte,byref producer as byte,byval compr as long,byref errnr as long) as long
private declare ptrsafe function dll_gdxresetspecialvalues lib "gdxdclib64" alias "gdxresetspecialvalues" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxsethastext lib "gdxdclib64" alias "gdxsethastext" (byval pgdx as longptr,byval synr as long) as long
private declare ptrsafe function dll_gdxsetreadspecialvalues lib "gdxdclib64" alias "gdxsetreadspecialvalues" (byval pgdx as longptr,byref avals as double) as long
private declare ptrsafe function dll_gdxsetspecialvalues lib "gdxdclib64" alias "gdxsetspecialvalues" (byval pgdx as longptr,byref avals as double) as long
private declare ptrsafe function dll_gdxsettextnodenr lib "gdxdclib64" alias "gdxsettextnodenr" (byval pgdx as longptr,byval txtnr as long,byval node as long) as long
private declare ptrsafe function dll_gdxsettracelevel lib "gdxdclib64" alias "gdxsettracelevel" (byval pgdx as longptr,byval n as long,byref s as byte) as long
private declare ptrsafe function dll_gdxsymbindxmaxlength lib "gdxdclib64" alias "gdxsymbindxmaxlength" (byval pgdx as longptr,byval synr as long,byref lengthinfo as long) as long
private declare ptrsafe function dll_gdxsymbmaxlength lib "gdxdclib64" alias "gdxsymbmaxlength" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxsymboladdcomment lib "gdxdclib64" alias "gdxsymboladdcomment" (byval pgdx as longptr,byval synr as long,byref txt as byte) as long
private declare ptrsafe function dll_gdxsymbolgetcomment lib "gdxdclib64" alias "gdxsymbolgetcomment" (byval pgdx as longptr,byval synr as long,byval n as long,byref txt as byte) as long
private declare ptrsafe function dll_gdxsymbolgetdomain lib "gdxdclib64" alias "gdxsymbolgetdomain" (byval pgdx as longptr,byval synr as long,byref domainsynrs as long) as long
private declare ptrsafe function dll_gdxsymbolgetdomainx lib "gdxdclib64" alias "gdxsymbolgetdomainx" (byval pgdx as longptr,byval synr as long,byref domainids as byte) as long
private declare ptrsafe function dll_gdxsymboldim lib "gdxdclib64" alias "gdxsymboldim" (byval pgdx as longptr,byval synr as long) as long
private declare ptrsafe function dll_gdxsymbolinfo lib "gdxdclib64" alias "gdxsymbolinfo" (byval pgdx as longptr,byval synr as long,byref syid as byte,byref dimen as long,byref typ as long) as long
private declare ptrsafe function dll_gdxsymbolinfox lib "gdxdclib64" alias "gdxsymbolinfox" (byval pgdx as longptr,byval synr as long,byref reccnt as long,byref userinfo as long,byref expltxt as byte) as long
private declare ptrsafe function dll_gdxsymbolsetdomain lib "gdxdclib64" alias "gdxsymbolsetdomain" (byval pgdx as longptr,byref domainids as byte) as long
private declare ptrsafe function dll_gdxsymbolsetdomainx lib "gdxdclib64" alias "gdxsymbolsetdomainx" (byval pgdx as longptr,byval synr as long,byref domainids as byte) as long
private declare ptrsafe function dll_gdxsysteminfo lib "gdxdclib64" alias "gdxsysteminfo" (byval pgdx as longptr,byref sycnt as long,byref uelcnt as long) as long
private declare ptrsafe function dll_gdxuelmaxlength lib "gdxdclib64" alias "gdxuelmaxlength" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxuelregisterdone lib "gdxdclib64" alias "gdxuelregisterdone" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxuelregistermap lib "gdxdclib64" alias "gdxuelregistermap" (byval pgdx as longptr,byval umap as long,byref uel as byte) as long
private declare ptrsafe function dll_gdxuelregistermapstart lib "gdxdclib64" alias "gdxuelregistermapstart" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxuelregisterraw lib "gdxdclib64" alias "gdxuelregisterraw" (byval pgdx as longptr,byref uel as byte) as long
private declare ptrsafe function dll_gdxuelregisterrawstart lib "gdxdclib64" alias "gdxuelregisterrawstart" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxuelregisterstr lib "gdxdclib64" alias "gdxuelregisterstr" (byval pgdx as longptr,byref uel as byte,byref uelnr as long) as long
private declare ptrsafe function dll_gdxuelregisterstrstart lib "gdxdclib64" alias "gdxuelregisterstrstart" (byval pgdx as longptr) as long
private declare ptrsafe function dll_gdxumfinduel lib "gdxdclib64" alias "gdxumfinduel" (byval pgdx as longptr,byref uel as byte,byref uelnr as long,byref uelmap as long) as long
private declare ptrsafe function dll_gdxumuelget lib "gdxdclib64" alias "gdxumuelget" (byval pgdx as longptr,byval uelnr as long,byref uel as byte,byref uelmap as long) as long
private declare ptrsafe function dll_gdxumuelinfo lib "gdxdclib64" alias "gdxumuelinfo" (byval pgdx as longptr,byref uelcnt as long,byref highmap as long) as long
private declare ptrsafe function dll_gdxcurrentdim lib "gdxdclib64" alias "gdxcurrentdim" (byval pgdx as longptr) as long

#else
private declare function dll_gdxacronymadd lib "gdxdclib" alias "gdxacronymadd" (byval pgdx as long,byref aname as byte,byref txt as byte,byval aindx as long) as long
private declare function dll_gdxacronymcount lib "gdxdclib" alias "gdxacronymcount" (byval pgdx as long) as long
private declare function dll_gdxacronymgetinfo lib "gdxdclib" alias "gdxacronymgetinfo" (byval pgdx as long,byval n as long,byref aname as byte,byref txt as byte,byref aindx as long) as long
private declare function dll_gdxacronymgetmapping lib "gdxdclib" alias "gdxacronymgetmapping" (byval pgdx as long,byval n as long,byref orgindx as long,byref newindx as long,byref autoindex as long) as long
private declare function dll_gdxacronymindex lib "gdxdclib" alias "gdxacronymindex" (byval pgdx as long,byval v as double) as long
private declare function dll_gdxacronymname lib "gdxdclib" alias "gdxacronymname" (byval pgdx as long,byval v as double,byref aname as byte) as long
private declare function dll_gdxacronymnextnr lib "gdxdclib" alias "gdxacronymnextnr" (byval pgdx as long,byval nv as long) as long
private declare function dll_gdxacronymsetinfo lib "gdxdclib" alias "gdxacronymsetinfo" (byval pgdx as long,byval n as long,byref aname as byte,byref txt as byte,byval aindx as long) as long
private declare function dll_gdxacronymvalue lib "gdxdclib" alias "gdxacronymvalue" (byval pgdx as long,byval aindx as long) as double
private declare function dll_gdxaddalias lib "gdxdclib" alias "gdxaddalias" (byval pgdx as long,byref id1 as byte,byref id2 as byte) as long
private declare function dll_gdxaddsettext lib "gdxdclib" alias "gdxaddsettext" (byval pgdx as long,byref txt as byte,byref txtnr as long) as long
private declare function dll_gdxautoconvert lib "gdxdclib" alias "gdxautoconvert" (byval pgdx as long,byval nv as long) as long
private declare function dll_gdxclose lib "gdxdclib" alias "gdxclose" (byval pgdx as long) as long
private declare function dll_gdxdataerrorcount lib "gdxdclib" alias "gdxdataerrorcount" (byval pgdx as long) as long
private declare function dll_gdxdataerrorrecord lib "gdxdclib" alias "gdxdataerrorrecord" (byval pgdx as long,byval recnr as long,byref keyint as long,byref values as double) as long
private declare function dll_gdxdatareaddone lib "gdxdclib" alias "gdxdatareaddone" (byval pgdx as long) as long
private declare function dll_gdxdatareadfilteredstart lib "gdxdclib" alias "gdxdatareadfilteredstart" (byval pgdx as long,byval synr as long,byref filteraction as long,byref nrrecs as long) as long
private declare function dll_gdxdatareadmap lib "gdxdclib" alias "gdxdatareadmap" (byval pgdx as long,byval recnr as long,byref keyint as long,byref values as double,byref dimfrst as long) as long
private declare function dll_gdxdatareadmapstart lib "gdxdclib" alias "gdxdatareadmapstart" (byval pgdx as long,byval synr as long,byref nrrecs as long) as long
private declare function dll_gdxdatareadraw lib "gdxdclib" alias "gdxdatareadraw" (byval pgdx as long,byref keyint as long,byref values as double,byref dimfrst as long) as long
' private declare function dll_gdxdatareadrawfast lib "gdxdclib" alias "gdxdatareadrawfast" (byval pgdx as long,byval synr as long,byval dp  *** function pointer not supported *** ,byref nrrecs as long) as long
private declare function dll_gdxdatareadrawstart lib "gdxdclib" alias "gdxdatareadrawstart" (byval pgdx as long,byval synr as long,byref nrrecs as long) as long
' private declare function dll_gdxdatareadslice lib "gdxdclib" alias "gdxdatareadslice" (byval pgdx as long,byref uelfilterstr as byte,byref dimen as long,byval dp  *** function pointer not supported *** ) as long
private declare function dll_gdxdatareadslicestart lib "gdxdclib" alias "gdxdatareadslicestart" (byval pgdx as long,byval synr as long,byref elemcounts as long) as long
private declare function dll_gdxdatareadstr lib "gdxdclib" alias "gdxdatareadstr" (byval pgdx as long,byref keystr as byte,byref values as double,byref dimfrst as long) as long
private declare function dll_gdxdatareadstrstart lib "gdxdclib" alias "gdxdatareadstrstart" (byval pgdx as long,byval synr as long,byref nrrecs as long) as long
private declare function dll_gdxdatasliceuels lib "gdxdclib" alias "gdxdatasliceuels" (byval pgdx as long,byref slicekeyint as long,byref keystr as byte) as long
private declare function dll_gdxdatawritedone lib "gdxdclib" alias "gdxdatawritedone" (byval pgdx as long) as long
private declare function dll_gdxdatawritemap lib "gdxdclib" alias "gdxdatawritemap" (byval pgdx as long,byref keyint as long,byref values as double) as long
private declare function dll_gdxdatawritemapstart lib "gdxdclib" alias "gdxdatawritemapstart" (byval pgdx as long,byref syid as byte,byref expltxt as byte,byval dimen as long,byval typ as long,byval userinfo as long) as long
private declare function dll_gdxdatawriteraw lib "gdxdclib" alias "gdxdatawriteraw" (byval pgdx as long,byref keyint as long,byref values as double) as long
private declare function dll_gdxdatawriterawstart lib "gdxdclib" alias "gdxdatawriterawstart" (byval pgdx as long,byref syid as byte,byref expltxt as byte,byval dimen as long,byval typ as long,byval userinfo as long) as long
private declare function dll_gdxdatawritestr lib "gdxdclib" alias "gdxdatawritestr" (byval pgdx as long,byref keystr as byte,byref values as double) as long
private declare function dll_gdxdatawritestrstart lib "gdxdclib" alias "gdxdatawritestrstart" (byval pgdx as long,byref syid as byte,byref expltxt as byte,byval dimen as long,byval typ as long,byval userinfo as long) as long
private declare function dll_gdxgetdllversion lib "gdxdclib" alias "gdxgetdllversion" (byval pgdx as long,byref v as byte) as long
private declare function dll_gdxerrorcount lib "gdxdclib" alias "gdxerrorcount" (byval pgdx as long) as long
private declare function dll_gdxerrorstr lib "gdxdclib" alias "gdxerrorstr" (byval pgdx as long,byval errnr as long,byref errmsg as byte) as long
private declare function dll_gdxfileinfo lib "gdxdclib" alias "gdxfileinfo" (byval pgdx as long,byref filever as long,byref comprlev as long) as long
private declare function dll_gdxfileversion lib "gdxdclib" alias "gdxfileversion" (byval pgdx as long,byref filestr as byte,byref producestr as byte) as long
private declare function dll_gdxfilterexists lib "gdxdclib" alias "gdxfilterexists" (byval pgdx as long,byval filternr as long) as long
private declare function dll_gdxfilterregister lib "gdxdclib" alias "gdxfilterregister" (byval pgdx as long,byval uelmap as long) as long
private declare function dll_gdxfilterregisterdone lib "gdxdclib" alias "gdxfilterregisterdone" (byval pgdx as long) as long
private declare function dll_gdxfilterregisterstart lib "gdxdclib" alias "gdxfilterregisterstart" (byval pgdx as long,byval filternr as long) as long
private declare function dll_gdxfindsymbol lib "gdxdclib" alias "gdxfindsymbol" (byval pgdx as long,byref syid as byte,byref synr as long) as long
private declare function dll_gdxgetelemtext lib "gdxdclib" alias "gdxgetelemtext" (byval pgdx as long,byval txtnr as long,byref txt as byte,byref node as long) as long
private declare function dll_gdxgetlasterror lib "gdxdclib" alias "gdxgetlasterror" (byval pgdx as long) as long
private declare function dll_gdxgetmemoryused lib "gdxdclib" alias "gdxgetmemoryused" (byval pgdx as long) as int64
private declare function dll_gdxgetspecialvalues lib "gdxdclib" alias "gdxgetspecialvalues" (byval pgdx as long,byref avals as double) as long
private declare function dll_gdxgetuel lib "gdxdclib" alias "gdxgetuel" (byval pgdx as long,byval uelnr as long,byref uel as byte) as long
private declare function dll_gdxmapvalue lib "gdxdclib" alias "gdxmapvalue" (byval pgdx as long,byval d as double,byref sv as long) as long
private declare function dll_gdxopenappend lib "gdxdclib" alias "gdxopenappend" (byval pgdx as long,byref filename as byte,byref producer as byte,byref errnr as long) as long
private declare function dll_gdxopenread lib "gdxdclib" alias "gdxopenread" (byval pgdx as long,byref filename as byte,byref errnr as long) as long
private declare function dll_gdxopenwrite lib "gdxdclib" alias "gdxopenwrite" (byval pgdx as long,byref filename as byte,byref producer as byte,byref errnr as long) as long
private declare function dll_gdxopenwriteex lib "gdxdclib" alias "gdxopenwriteex" (byval pgdx as long,byref filename as byte,byref producer as byte,byval compr as long,byref errnr as long) as long
private declare function dll_gdxresetspecialvalues lib "gdxdclib" alias "gdxresetspecialvalues" (byval pgdx as long) as long
private declare function dll_gdxsethastext lib "gdxdclib" alias "gdxsethastext" (byval pgdx as long,byval synr as long) as long
private declare function dll_gdxsetreadspecialvalues lib "gdxdclib" alias "gdxsetreadspecialvalues" (byval pgdx as long,byref avals as double) as long
private declare function dll_gdxsetspecialvalues lib "gdxdclib" alias "gdxsetspecialvalues" (byval pgdx as long,byref avals as double) as long
private declare function dll_gdxsettextnodenr lib "gdxdclib" alias "gdxsettextnodenr" (byval pgdx as long,byval txtnr as long,byval node as long) as long
private declare function dll_gdxsettracelevel lib "gdxdclib" alias "gdxsettracelevel" (byval pgdx as long,byval n as long,byref s as byte) as long
private declare function dll_gdxsymbindxmaxlength lib "gdxdclib" alias "gdxsymbindxmaxlength" (byval pgdx as long,byval synr as long,byref lengthinfo as long) as long
private declare function dll_gdxsymbmaxlength lib "gdxdclib" alias "gdxsymbmaxlength" (byval pgdx as long) as long
private declare function dll_gdxsymboladdcomment lib "gdxdclib" alias "gdxsymboladdcomment" (byval pgdx as long,byval synr as long,byref txt as byte) as long
private declare function dll_gdxsymbolgetcomment lib "gdxdclib" alias "gdxsymbolgetcomment" (byval pgdx as long,byval synr as long,byval n as long,byref txt as byte) as long
private declare function dll_gdxsymbolgetdomain lib "gdxdclib" alias "gdxsymbolgetdomain" (byval pgdx as long,byval synr as long,byref domainsynrs as long) as long
private declare function dll_gdxsymbolgetdomainx lib "gdxdclib" alias "gdxsymbolgetdomainx" (byval pgdx as long,byval synr as long,byref domainids as byte) as long
private declare function dll_gdxsymboldim lib "gdxdclib" alias "gdxsymboldim" (byval pgdx as long,byval synr as long) as long
private declare function dll_gdxsymbolinfo lib "gdxdclib" alias "gdxsymbolinfo" (byval pgdx as long,byval synr as long,byref syid as byte,byref dimen as long,byref typ as long) as long
private declare function dll_gdxsymbolinfox lib "gdxdclib" alias "gdxsymbolinfox" (byval pgdx as long,byval synr as long,byref reccnt as long,byref userinfo as long,byref expltxt as byte) as long
private declare function dll_gdxsymbolsetdomain lib "gdxdclib" alias "gdxsymbolsetdomain" (byval pgdx as long,byref domainids as byte) as long
private declare function dll_gdxsymbolsetdomainx lib "gdxdclib" alias "gdxsymbolsetdomainx" (byval pgdx as long,byval synr as long,byref domainids as byte) as long
private declare function dll_gdxsysteminfo lib "gdxdclib" alias "gdxsysteminfo" (byval pgdx as long,byref sycnt as long,byref uelcnt as long) as long
private declare function dll_gdxuelmaxlength lib "gdxdclib" alias "gdxuelmaxlength" (byval pgdx as long) as long
private declare function dll_gdxuelregisterdone lib "gdxdclib" alias "gdxuelregisterdone" (byval pgdx as long) as long
private declare function dll_gdxuelregistermap lib "gdxdclib" alias "gdxuelregistermap" (byval pgdx as long,byval umap as long,byref uel as byte) as long
private declare function dll_gdxuelregistermapstart lib "gdxdclib" alias "gdxuelregistermapstart" (byval pgdx as long) as long
private declare function dll_gdxuelregisterraw lib "gdxdclib" alias "gdxuelregisterraw" (byval pgdx as long,byref uel as byte) as long
private declare function dll_gdxuelregisterrawstart lib "gdxdclib" alias "gdxuelregisterrawstart" (byval pgdx as long) as long
private declare function dll_gdxuelregisterstr lib "gdxdclib" alias "gdxuelregisterstr" (byval pgdx as long,byref uel as byte,byref uelnr as long) as long
private declare function dll_gdxuelregisterstrstart lib "gdxdclib" alias "gdxuelregisterstrstart" (byval pgdx as long) as long
private declare function dll_gdxumfinduel lib "gdxdclib" alias "gdxumfinduel" (byval pgdx as long,byref uel as byte,byref uelnr as long,byref uelmap as long) as long
private declare function dll_gdxumuelget lib "gdxdclib" alias "gdxumuelget" (byval pgdx as long,byval uelnr as long,byref uel as byte,byref uelmap as long) as long
private declare function dll_gdxumuelinfo lib "gdxdclib" alias "gdxumuelinfo" (byval pgdx as long,byref uelcnt as long,byref highmap as long) as long
private declare function dll_gdxcurrentdim lib "gdxdclib" alias "gdxcurrentdim" (byval pgdx as long) as long

#end if

#if win64 then
private declare ptrsafe sub xcreate lib "gdxdclib64" (byref pgdx as longptr)
private declare ptrsafe sub xfree   lib "gdxdclib64" (byref pgdx as longptr)
#else
private declare sub xcreate lib "gdxdclib" (byref pgdx as long)
private declare sub xfree   lib "gdxdclib" (byref pgdx as long)
#end if

public function gdxcreate(byref pgdx as vbaptr, byref msgbuf as string) as boolean
    call xcreate(pgdx.p)
    if pgdx.p <> 0 then
        gdxcreate = true
    else
        gdxcreate = false
    end if
end function

public function gdxcreatex(byref pgdx as vbaptr, byref msgbuf as string) as boolean
    call xcreate(pgdx.p)
    if pgdx.p <> 0 then
        gdxcreatex = true
    else
        gdxcreatex = false
    end if
end function

public function gdxcreated(byref pgdx as vbaptr, byval dirname as string, byref msgbuf as string) as boolean
    call xcreate(pgdx.p)
    if pgdx.p <> 0 then
        gdxcreated = true
    else
        gdxcreated = false
    end if
end function

public function gdxcreatel(byref pgdx as vbaptr, byval libname as string, byref msgbuf as string) as boolean
    call xcreate(pgdx.p)
    if pgdx.p <> 0 then
        gdxcreatel = true
    else
        gdxcreatel = false
    end if
end function

public function gdxfree(byref pgdx as vbaptr) as boolean
   call xfree(pgdx.p)
   gdxfree = true
end function

private sub convertbas2pas(s as string, b() as byte)
    dim i as integer
    dim slen as integer
    slen = len(s)
    if (slen > ubound(b)) then
        slen = ubound(b)
    end if
    b(0) = slen
    for i = 1 to slen
        b(i) = asc(mid(s, i, 1))
    next i
end sub

private sub convertpas2bas(b() as byte, s as string)
    dim i as integer
    dim slen as integer
    slen = b(0)
    s = ""
    for i = 1 to slen
        s = s & chr(b(i))
    next i
end sub

private sub convertc2bas(b() as byte, s as string)
    dim i as integer
    s = ""
    i = 0
    do while b(i) <> 0
        s = s & chr(b(i))
        i = i + 1
    loop
end sub

public function gdxacronymadd(pgdx as vbaptr,aname as string,txt as string,aindx as long) as long
   dim cpy_aname as string255
   dim cpy_txt as string255
   call convertbas2pas(aname, cpy_aname.s)
   call convertbas2pas(txt, cpy_txt.s)
   gdxacronymadd = dll_gdxacronymadd(pgdx.p,cpy_aname.s(0),cpy_txt.s(0),aindx)
end function

public function gdxacronymcount(pgdx as vbaptr) as long
   gdxacronymcount = dll_gdxacronymcount(pgdx.p)
end function

public function gdxacronymgetinfo(pgdx as vbaptr,n as long,aname as string,txt as string,aindx as long) as long
   dim cpy_aname as string255
   dim cpy_txt as string255
   gdxacronymgetinfo = dll_gdxacronymgetinfo(pgdx.p,n,cpy_aname.s(0),cpy_txt.s(0),aindx)
   call convertpas2bas(cpy_aname.s,aname)
   call convertpas2bas(cpy_txt.s,txt)
end function

public function gdxacronymgetmapping(pgdx as vbaptr,n as long,orgindx as long,newindx as long,autoindex as long) as long
   gdxacronymgetmapping = dll_gdxacronymgetmapping(pgdx.p,n,orgindx,newindx,autoindex)
end function

public function gdxacronymindex(pgdx as vbaptr,v as double) as long
   gdxacronymindex = dll_gdxacronymindex(pgdx.p,v)
end function

public function gdxacronymname(pgdx as vbaptr,v as double,aname as string) as long
   dim cpy_aname as string255
   gdxacronymname = dll_gdxacronymname(pgdx.p,v,cpy_aname.s(0))
   call convertpas2bas(cpy_aname.s,aname)
end function

public function gdxacronymnextnr(pgdx as vbaptr,nv as long) as long
   gdxacronymnextnr = dll_gdxacronymnextnr(pgdx.p,nv)
end function

public function gdxacronymsetinfo(pgdx as vbaptr,n as long,aname as string,txt as string,aindx as long) as long
   dim cpy_aname as string255
   dim cpy_txt as string255
   call convertbas2pas(aname, cpy_aname.s)
   call convertbas2pas(txt, cpy_txt.s)
   gdxacronymsetinfo = dll_gdxacronymsetinfo(pgdx.p,n,cpy_aname.s(0),cpy_txt.s(0),aindx)
end function

public function gdxacronymvalue(pgdx as vbaptr,aindx as long) as double
   gdxacronymvalue = dll_gdxacronymvalue(pgdx.p,aindx)
end function

public function gdxaddalias(pgdx as vbaptr,id1 as string,id2 as string) as long
   dim cpy_id1 as string255
   dim cpy_id2 as string255
   call convertbas2pas(id1, cpy_id1.s)
   call convertbas2pas(id2, cpy_id2.s)
   gdxaddalias = dll_gdxaddalias(pgdx.p,cpy_id1.s(0),cpy_id2.s(0))
end function

public function gdxaddsettext(pgdx as vbaptr,txt as string,txtnr as long) as long
   dim cpy_txt as string255
   call convertbas2pas(txt, cpy_txt.s)
   gdxaddsettext = dll_gdxaddsettext(pgdx.p,cpy_txt.s(0),txtnr)
end function

public function gdxautoconvert(pgdx as vbaptr,nv as long) as long
   gdxautoconvert = dll_gdxautoconvert(pgdx.p,nv)
end function

public function gdxclose(pgdx as vbaptr) as long
   gdxclose = dll_gdxclose(pgdx.p)
end function

public function gdxdataerrorcount(pgdx as vbaptr) as long
   gdxdataerrorcount = dll_gdxdataerrorcount(pgdx.p)
end function

public function gdxdataerrorrecord(pgdx as vbaptr,recnr as long,keyint() as long,values() as double) as long
   gdxdataerrorrecord = dll_gdxdataerrorrecord(pgdx.p,recnr,keyint(0),values(0))
end function

public function gdxdatareaddone(pgdx as vbaptr) as long
   gdxdatareaddone = dll_gdxdatareaddone(pgdx.p)
end function

public function gdxdatareadfilteredstart(pgdx as vbaptr,synr as long,filteraction() as long,nrrecs as long) as long
   gdxdatareadfilteredstart = dll_gdxdatareadfilteredstart(pgdx.p,synr,filteraction(0),nrrecs)
end function

public function gdxdatareadmap(pgdx as vbaptr,recnr as long,keyint() as long,values() as double,dimfrst as long) as long
   gdxdatareadmap = dll_gdxdatareadmap(pgdx.p,recnr,keyint(0),values(0),dimfrst)
end function

public function gdxdatareadmapstart(pgdx as vbaptr,synr as long,nrrecs as long) as long
   gdxdatareadmapstart = dll_gdxdatareadmapstart(pgdx.p,synr,nrrecs)
end function

public function gdxdatareadraw(pgdx as vbaptr,keyint() as long,values() as double,dimfrst as long) as long
   gdxdatareadraw = dll_gdxdatareadraw(pgdx.p,keyint(0),values(0),dimfrst)
end function

public function gdxdatareadrawstart(pgdx as vbaptr,synr as long,nrrecs as long) as long
   gdxdatareadrawstart = dll_gdxdatareadrawstart(pgdx.p,synr,nrrecs)
end function

public function gdxdatareadslicestart(pgdx as vbaptr,synr as long,elemcounts() as long) as long
   gdxdatareadslicestart = dll_gdxdatareadslicestart(pgdx.p,synr,elemcounts(0))
end function

public function gdxdatareadstr(pgdx as vbaptr,keystr() as string,values() as double,dimfrst as long) as long
   dim cpy_keystr(maxdim) as string255
   dim i_keystr as integer
   dim sidim_keystr as integer
   gdxdatareadstr = dll_gdxdatareadstr(pgdx.p,cpy_keystr(0).s(0),values(0),dimfrst)
   sidim_keystr = dll_gdxcurrentdim(pgdx.p)
   for i_keystr = 0 to sidim_keystr
      call convertpas2bas(cpy_keystr(i_keystr).s,keystr(i_keystr))
   next i_keystr
end function

public function gdxdatareadstrstart(pgdx as vbaptr,synr as long,nrrecs as long) as long
   gdxdatareadstrstart = dll_gdxdatareadstrstart(pgdx.p,synr,nrrecs)
end function

public function gdxdatasliceuels(pgdx as vbaptr,slicekeyint() as long,keystr() as string) as long
   dim cpy_keystr(maxdim) as string255
   dim i_keystr as integer
   dim sidim_keystr as integer
   gdxdatasliceuels = dll_gdxdatasliceuels(pgdx.p,slicekeyint(0),cpy_keystr(0).s(0))
   sidim_keystr = dll_gdxcurrentdim(pgdx.p)
   for i_keystr = 0 to sidim_keystr
      call convertpas2bas(cpy_keystr(i_keystr).s,keystr(i_keystr))
   next i_keystr
end function

public function gdxdatawritedone(pgdx as vbaptr) as long
   gdxdatawritedone = dll_gdxdatawritedone(pgdx.p)
end function

public function gdxdatawritemap(pgdx as vbaptr,keyint() as long,values() as double) as long
   gdxdatawritemap = dll_gdxdatawritemap(pgdx.p,keyint(0),values(0))
end function

public function gdxdatawritemapstart(pgdx as vbaptr,syid as string,expltxt as string,dimen as long,typ as long,userinfo as long) as long
   dim cpy_syid as string255
   dim cpy_expltxt as string255
   call convertbas2pas(syid, cpy_syid.s)
   call convertbas2pas(expltxt, cpy_expltxt.s)
   gdxdatawritemapstart = dll_gdxdatawritemapstart(pgdx.p,cpy_syid.s(0),cpy_expltxt.s(0),dimen,typ,userinfo)
end function

public function gdxdatawriteraw(pgdx as vbaptr,keyint() as long,values() as double) as long
   gdxdatawriteraw = dll_gdxdatawriteraw(pgdx.p,keyint(0),values(0))
end function

public function gdxdatawriterawstart(pgdx as vbaptr,syid as string,expltxt as string,dimen as long,typ as long,userinfo as long) as long
   dim cpy_syid as string255
   dim cpy_expltxt as string255
   call convertbas2pas(syid, cpy_syid.s)
   call convertbas2pas(expltxt, cpy_expltxt.s)
   gdxdatawriterawstart = dll_gdxdatawriterawstart(pgdx.p,cpy_syid.s(0),cpy_expltxt.s(0),dimen,typ,userinfo)
end function

public function gdxdatawritestr(pgdx as vbaptr,keystr() as string,values() as double) as long
   dim cpy_keystr(maxdim) as string255
   dim i_keystr as integer
   dim sidim_keystr as integer
   sidim_keystr = dll_gdxcurrentdim(pgdx.p)
   for i_keystr = 0 to sidim_keystr
      call convertbas2pas(keystr(i_keystr), cpy_keystr(i_keystr).s)
   next i_keystr
   gdxdatawritestr = dll_gdxdatawritestr(pgdx.p,cpy_keystr(0).s(0),values(0))
end function

public function gdxdatawritestrstart(pgdx as vbaptr,syid as string,expltxt as string,dimen as long,typ as long,userinfo as long) as long
   dim cpy_syid as string255
   dim cpy_expltxt as string255
   call convertbas2pas(syid, cpy_syid.s)
   call convertbas2pas(expltxt, cpy_expltxt.s)
   gdxdatawritestrstart = dll_gdxdatawritestrstart(pgdx.p,cpy_syid.s(0),cpy_expltxt.s(0),dimen,typ,userinfo)
end function

public function gdxgetdllversion(pgdx as vbaptr,v as string) as long
   dim cpy_v as string255
   gdxgetdllversion = dll_gdxgetdllversion(pgdx.p,cpy_v.s(0))
   call convertpas2bas(cpy_v.s,v)
end function

public function gdxerrorcount(pgdx as vbaptr) as long
   gdxerrorcount = dll_gdxerrorcount(pgdx.p)
end function

public function gdxerrorstr(pgdx as vbaptr,errnr as long,errmsg as string) as long
   dim cpy_errmsg as string255
   gdxerrorstr = dll_gdxerrorstr(pgdx.p,errnr,cpy_errmsg.s(0))
   call convertpas2bas(cpy_errmsg.s,errmsg)
end function

public function gdxfileinfo(pgdx as vbaptr,filever as long,comprlev as long) as long
   gdxfileinfo = dll_gdxfileinfo(pgdx.p,filever,comprlev)
end function

public function gdxfileversion(pgdx as vbaptr,filestr as string,producestr as string) as long
   dim cpy_filestr as string255
   dim cpy_producestr as string255
   gdxfileversion = dll_gdxfileversion(pgdx.p,cpy_filestr.s(0),cpy_producestr.s(0))
   call convertpas2bas(cpy_filestr.s,filestr)
   call convertpas2bas(cpy_producestr.s,producestr)
end function

public function gdxfilterexists(pgdx as vbaptr,filternr as long) as long
   gdxfilterexists = dll_gdxfilterexists(pgdx.p,filternr)
end function

public function gdxfilterregister(pgdx as vbaptr,uelmap as long) as long
   gdxfilterregister = dll_gdxfilterregister(pgdx.p,uelmap)
end function

public function gdxfilterregisterdone(pgdx as vbaptr) as long
   gdxfilterregisterdone = dll_gdxfilterregisterdone(pgdx.p)
end function

public function gdxfilterregisterstart(pgdx as vbaptr,filternr as long) as long
   gdxfilterregisterstart = dll_gdxfilterregisterstart(pgdx.p,filternr)
end function

public function gdxfindsymbol(pgdx as vbaptr,syid as string,synr as long) as long
   dim cpy_syid as string255
   call convertbas2pas(syid, cpy_syid.s)
   gdxfindsymbol = dll_gdxfindsymbol(pgdx.p,cpy_syid.s(0),synr)
end function

public function gdxgetelemtext(pgdx as vbaptr,txtnr as long,txt as string,node as long) as long
   dim cpy_txt as string255
   gdxgetelemtext = dll_gdxgetelemtext(pgdx.p,txtnr,cpy_txt.s(0),node)
   call convertpas2bas(cpy_txt.s,txt)
end function

public function gdxgetlasterror(pgdx as vbaptr) as long
   gdxgetlasterror = dll_gdxgetlasterror(pgdx.p)
end function

public function gdxgetmemoryused(pgdx as vbaptr) as int64
   gdxgetmemoryused = dll_gdxgetmemoryused(pgdx.p)
end function

public function gdxgetspecialvalues(pgdx as vbaptr,avals() as double) as long
   gdxgetspecialvalues = dll_gdxgetspecialvalues(pgdx.p,avals(0))
end function

public function gdxgetuel(pgdx as vbaptr,uelnr as long,uel as string) as long
   dim cpy_uel as string255
   gdxgetuel = dll_gdxgetuel(pgdx.p,uelnr,cpy_uel.s(0))
   call convertpas2bas(cpy_uel.s,uel)
end function

public function gdxmapvalue(pgdx as vbaptr,d as double,sv as long) as long
   gdxmapvalue = dll_gdxmapvalue(pgdx.p,d,sv)
end function

public function gdxopenappend(pgdx as vbaptr,filename as string,producer as string,errnr as long) as long
   dim cpy_filename as string255
   dim cpy_producer as string255
   call convertbas2pas(filename, cpy_filename.s)
   call convertbas2pas(producer, cpy_producer.s)
   gdxopenappend = dll_gdxopenappend(pgdx.p,cpy_filename.s(0),cpy_producer.s(0),errnr)
end function

public function gdxopenread(pgdx as vbaptr,filename as string,errnr as long) as long
   dim cpy_filename as string255
   call convertbas2pas(filename, cpy_filename.s)
   gdxopenread = dll_gdxopenread(pgdx.p,cpy_filename.s(0),errnr)
end function

public function gdxopenwrite(pgdx as vbaptr,filename as string,producer as string,errnr as long) as long
   dim cpy_filename as string255
   dim cpy_producer as string255
   call convertbas2pas(filename, cpy_filename.s)
   call convertbas2pas(producer, cpy_producer.s)
   gdxopenwrite = dll_gdxopenwrite(pgdx.p,cpy_filename.s(0),cpy_producer.s(0),errnr)
end function

public function gdxopenwriteex(pgdx as vbaptr,filename as string,producer as string,compr as long,errnr as long) as long
   dim cpy_filename as string255
   dim cpy_producer as string255
   call convertbas2pas(filename, cpy_filename.s)
   call convertbas2pas(producer, cpy_producer.s)
   gdxopenwriteex = dll_gdxopenwriteex(pgdx.p,cpy_filename.s(0),cpy_producer.s(0),compr,errnr)
end function

public function gdxresetspecialvalues(pgdx as vbaptr) as long
   gdxresetspecialvalues = dll_gdxresetspecialvalues(pgdx.p)
end function

public function gdxsethastext(pgdx as vbaptr,synr as long) as long
   gdxsethastext = dll_gdxsethastext(pgdx.p,synr)
end function

public function gdxsetreadspecialvalues(pgdx as vbaptr,avals() as double) as long
   gdxsetreadspecialvalues = dll_gdxsetreadspecialvalues(pgdx.p,avals(0))
end function

public function gdxsetspecialvalues(pgdx as vbaptr,avals() as double) as long
   gdxsetspecialvalues = dll_gdxsetspecialvalues(pgdx.p,avals(0))
end function

public function gdxsettextnodenr(pgdx as vbaptr,txtnr as long,node as long) as long
   gdxsettextnodenr = dll_gdxsettextnodenr(pgdx.p,txtnr,node)
end function

public function gdxsettracelevel(pgdx as vbaptr,n as long,s as string) as long
   dim cpy_s as string255
   call convertbas2pas(s, cpy_s.s)
   gdxsettracelevel = dll_gdxsettracelevel(pgdx.p,n,cpy_s.s(0))
end function

public function gdxsymbindxmaxlength(pgdx as vbaptr,synr as long,lengthinfo() as long) as long
   gdxsymbindxmaxlength = dll_gdxsymbindxmaxlength(pgdx.p,synr,lengthinfo(0))
end function

public function gdxsymbmaxlength(pgdx as vbaptr) as long
   gdxsymbmaxlength = dll_gdxsymbmaxlength(pgdx.p)
end function

public function gdxsymboladdcomment(pgdx as vbaptr,synr as long,txt as string) as long
   dim cpy_txt as string255
   call convertbas2pas(txt, cpy_txt.s)
   gdxsymboladdcomment = dll_gdxsymboladdcomment(pgdx.p,synr,cpy_txt.s(0))
end function

public function gdxsymbolgetcomment(pgdx as vbaptr,synr as long,n as long,txt as string) as long
   dim cpy_txt as string255
   gdxsymbolgetcomment = dll_gdxsymbolgetcomment(pgdx.p,synr,n,cpy_txt.s(0))
   call convertpas2bas(cpy_txt.s,txt)
end function

public function gdxsymbolgetdomain(pgdx as vbaptr,synr as long,domainsynrs() as long) as long
   gdxsymbolgetdomain = dll_gdxsymbolgetdomain(pgdx.p,synr,domainsynrs(0))
end function

public function gdxsymbolgetdomainx(pgdx as vbaptr,synr as long,domainids() as string) as long
   dim cpy_domainids(maxdim) as string255
   dim i_domainids as integer
   dim sidim_domainids as integer
   gdxsymbolgetdomainx = dll_gdxsymbolgetdomainx(pgdx.p,synr,cpy_domainids(0).s(0))
   sidim_domainids = dll_gdxsymboldim(pgdx.p, synr)
   for i_domainids = 0 to sidim_domainids
      call convertpas2bas(cpy_domainids(i_domainids).s,domainids(i_domainids))
   next i_domainids
end function

public function gdxsymboldim(pgdx as vbaptr,synr as long) as long
   gdxsymboldim = dll_gdxsymboldim(pgdx.p,synr)
end function

public function gdxsymbolinfo(pgdx as vbaptr,synr as long,syid as string,dimen as long,typ as long) as long
   dim cpy_syid as string255
   gdxsymbolinfo = dll_gdxsymbolinfo(pgdx.p,synr,cpy_syid.s(0),dimen,typ)
   call convertpas2bas(cpy_syid.s,syid)
end function

public function gdxsymbolinfox(pgdx as vbaptr,synr as long,reccnt as long,userinfo as long,expltxt as string) as long
   dim cpy_expltxt as string255
   gdxsymbolinfox = dll_gdxsymbolinfox(pgdx.p,synr,reccnt,userinfo,cpy_expltxt.s(0))
   call convertpas2bas(cpy_expltxt.s,expltxt)
end function

public function gdxsymbolsetdomain(pgdx as vbaptr,domainids() as string) as long
   dim cpy_domainids(maxdim) as string255
   dim i_domainids as integer
   dim sidim_domainids as integer
   sidim_domainids = dll_gdxcurrentdim(pgdx.p)
   for i_domainids = 0 to sidim_domainids
      call convertbas2pas(domainids(i_domainids), cpy_domainids(i_domainids).s)
   next i_domainids
   gdxsymbolsetdomain = dll_gdxsymbolsetdomain(pgdx.p,cpy_domainids(0).s(0))
end function

public function gdxsymbolsetdomainx(pgdx as vbaptr,synr as long,domainids() as string) as long
   dim cpy_domainids(maxdim) as string255
   dim i_domainids as integer
   dim sidim_domainids as integer
   sidim_domainids = dll_gdxsymboldim(pgdx.p, synr)
   for i_domainids = 0 to sidim_domainids
      call convertbas2pas(domainids(i_domainids), cpy_domainids(i_domainids).s)
   next i_domainids
   gdxsymbolsetdomainx = dll_gdxsymbolsetdomainx(pgdx.p,synr,cpy_domainids(0).s(0))
end function

public function gdxsysteminfo(pgdx as vbaptr,sycnt as long,uelcnt as long) as long
   gdxsysteminfo = dll_gdxsysteminfo(pgdx.p,sycnt,uelcnt)
end function

public function gdxuelmaxlength(pgdx as vbaptr) as long
   gdxuelmaxlength = dll_gdxuelmaxlength(pgdx.p)
end function

public function gdxuelregisterdone(pgdx as vbaptr) as long
   gdxuelregisterdone = dll_gdxuelregisterdone(pgdx.p)
end function

public function gdxuelregistermap(pgdx as vbaptr,umap as long,uel as string) as long
   dim cpy_uel as string255
   call convertbas2pas(uel, cpy_uel.s)
   gdxuelregistermap = dll_gdxuelregistermap(pgdx.p,umap,cpy_uel.s(0))
end function

public function gdxuelregistermapstart(pgdx as vbaptr) as long
   gdxuelregistermapstart = dll_gdxuelregistermapstart(pgdx.p)
end function

public function gdxuelregisterraw(pgdx as vbaptr,uel as string) as long
   dim cpy_uel as string255
   call convertbas2pas(uel, cpy_uel.s)
   gdxuelregisterraw = dll_gdxuelregisterraw(pgdx.p,cpy_uel.s(0))
end function

public function gdxuelregisterrawstart(pgdx as vbaptr) as long
   gdxuelregisterrawstart = dll_gdxuelregisterrawstart(pgdx.p)
end function

public function gdxuelregisterstr(pgdx as vbaptr,uel as string,uelnr as long) as long
   dim cpy_uel as string255
   call convertbas2pas(uel, cpy_uel.s)
   gdxuelregisterstr = dll_gdxuelregisterstr(pgdx.p,cpy_uel.s(0),uelnr)
end function

public function gdxuelregisterstrstart(pgdx as vbaptr) as long
   gdxuelregisterstrstart = dll_gdxuelregisterstrstart(pgdx.p)
end function

public function gdxumfinduel(pgdx as vbaptr,uel as string,uelnr as long,uelmap as long) as long
   dim cpy_uel as string255
   call convertbas2pas(uel, cpy_uel.s)
   gdxumfinduel = dll_gdxumfinduel(pgdx.p,cpy_uel.s(0),uelnr,uelmap)
end function

public function gdxumuelget(pgdx as vbaptr,uelnr as long,uel as string,uelmap as long) as long
   dim cpy_uel as string255
   gdxumuelget = dll_gdxumuelget(pgdx.p,uelnr,cpy_uel.s(0),uelmap)
   call convertpas2bas(cpy_uel.s,uel)
end function

public function gdxumuelinfo(pgdx as vbaptr,uelcnt as long,highmap as long) as long
   gdxumuelinfo = dll_gdxumuelinfo(pgdx.p,uelcnt,highmap)
end function

public function gdxcurrentdim(pgdx as vbaptr) as long
   gdxcurrentdim = dll_gdxcurrentdim(pgdx.p)
end function
