{ generated by src\gamsx\goptwrp.gms }

unit gopdopdef;

{$H- short strings only }
{$P- no open parameters ==> no maxlen byte}
{$V+ force var strings}

interface

uses
   sysutils,
   Windows,
{$IFDEF USEOPTOBJ}
   gmsoptions
{$ELSE}
   optdocpdef
{$ENDIF}
;

type
    TGamsOptions = Class
    private
       FOpt      : TGMSOptions;
       pgxptr    : pointer;
       FSysDir   : shortstring;
       function    GetString(const name: shortstring): shortstring;
       procedure   SetString(const name: shortstring; const value: shortstring);
       function    GetInteger(const name: shortstring): integer;
       procedure   SetInteger(const name: shortstring; const value: integer);
       function    GetReal(const name: shortstring): double;
       procedure   SetReal(const name: shortstring; const value: double);
       function    GetLP: shortstring;
       procedure   SetLP(const x:shortstring);
       function    GetMIP: shortstring;
       procedure   SetMIP(const x:shortstring);
       function    GetRMIP: shortstring;
       procedure   SetRMIP(const x:shortstring);
       function    GetNLP: shortstring;
       procedure   SetNLP(const x:shortstring);
       function    GetMCP: shortstring;
       procedure   SetMCP(const x:shortstring);
       function    GetMPEC: shortstring;
       procedure   SetMPEC(const x:shortstring);
       function    GetRMPEC: shortstring;
       procedure   SetRMPEC(const x:shortstring);
       function    GetCNS: shortstring;
       procedure   SetCNS(const x:shortstring);
       function    GetDNLP: shortstring;
       procedure   SetDNLP(const x:shortstring);
       function    GetRMINLP: shortstring;
       procedure   SetRMINLP(const x:shortstring);
       function    GetMINLP: shortstring;
       procedure   SetMINLP(const x:shortstring);
       function    GetQCP: shortstring;
       procedure   SetQCP(const x:shortstring);
       function    GetMIQCP: shortstring;
       procedure   SetMIQCP(const x:shortstring);
       function    GetRMIQCP: shortstring;
       procedure   SetRMIQCP(const x:shortstring);
       function    GetEMP: shortstring;
       procedure   SetEMP(const x:shortstring);
       function    GetRestart: shortstring;
       procedure   SetRestart(const x:shortstring);
       function    GetInput: shortstring;
       procedure   SetInput(const x:shortstring);
       function    GetOutput: shortstring;
       procedure   SetOutput(const x:shortstring);
       function    GetSave: shortstring;
       procedure   SetSave(const x:shortstring);
       function    GetSymbol: shortstring;
       procedure   SetSymbol(const x:shortstring);
       function    GetXSave: shortstring;
       procedure   SetXSave(const x:shortstring);
       function    GetExpand: shortstring;
       procedure   SetExpand(const x:shortstring);
       function    GetPageWidth: integer;
       procedure   SetPageWidth(const x:integer);
       function    GetPageSize: integer;
       procedure   SetPageSize(const x:integer);
       function    GetPageContr: integer;
       procedure   SetPageContr(const x:integer);
       function    GetAction: shortstring;
       procedure   SetAction(const x:shortstring);
       function    GetSubSys: shortstring;
       procedure   SetSubSys(const x:shortstring);
       function    GetErrNam: shortstring;
       procedure   SetErrNam(const x:shortstring);
       function    GetScrDir: shortstring;
       procedure   SetScrDir(const x:shortstring);
       function    GetScrNam: shortstring;
       procedure   SetScrNam(const x:shortstring);
       function    GetSysDir: shortstring;
       procedure   SetSysDir(const x:shortstring);
       function    GetCurDir: shortstring;
       procedure   SetCurDir(const x:shortstring);
       function    GetWorkDir: shortstring;
       procedure   SetWorkDir(const x:shortstring);
       function    GetPutDir: shortstring;
       procedure   SetPutDir(const x:shortstring);
       function    GetGridDir: shortstring;
       procedure   SetGridDir(const x:shortstring);
       function    GetScriptNext: shortstring;
       procedure   SetScriptNext(const x:shortstring);
       function    GetScriptExit: shortstring;
       procedure   SetScriptExit(const x:shortstring);
       function    GetScriptFrst: shortstring;
       procedure   SetScriptFrst(const x:shortstring);
       function    GetLogLine: integer;
       procedure   SetLogLine(const x:integer);
       function    GetLogOption: integer;
       procedure   SetLogOption(const x:integer);
       function    GetLogFile: shortstring;
       procedure   SetLogFile(const x:shortstring);
       function    GetTrace: shortstring;
       procedure   SetTrace(const x:shortstring);
       function    GetAppendOut: integer;
       procedure   SetAppendOut(const x:integer);
       function    GetAppendLog: integer;
       procedure   SetAppendLog(const x:integer);
       function    GetStepSum: integer;
       procedure   SetStepSum(const x:integer);
       function    GetMultiPass: integer;
       procedure   SetMultiPass(const x:integer);
       function    GetSuppress: integer;
       procedure   SetSuppress(const x:integer);
       function    GetDFormat: integer;
       procedure   SetDFormat(const x:integer);
       function    GetTFormat: integer;
       procedure   SetTFormat(const x:integer);
       function    GetTabIn: integer;
       procedure   SetTabIn(const x:integer);
       function    GetCtrlZ: integer;
       procedure   SetCtrlZ(const x:integer);
       function    GetCtrlM: integer;
       procedure   SetCtrlM(const x:integer);
       function    GetSolverCntr: shortstring;
       procedure   SetSolverCntr(const x:shortstring);
       function    GetSolverMatr: shortstring;
       procedure   SetSolverMatr(const x:shortstring);
       function    GetSolverInst: shortstring;
       procedure   SetSolverInst(const x:shortstring);
       function    GetSolverStat: shortstring;
       procedure   SetSolverStat(const x:shortstring);
       function    GetSolverSolu: shortstring;
       procedure   SetSolverSolu(const x:shortstring);
       function    GetSolverDict: shortstring;
       procedure   SetSolverDict(const x:shortstring);
       function    GetPoolUse: integer;
       procedure   SetPoolUse(const x:integer);
       function    GetPoolFree1: integer;
       procedure   SetPoolFree1(const x:integer);
       function    GetPoolFree2: integer;
       procedure   SetPoolFree2(const x:integer);
       function    GetPoolFree3: integer;
       procedure   SetPoolFree3(const x:integer);
       function    GetPoolFree4: integer;
       procedure   SetPoolFree4(const x:integer);
       function    GetPoolFree5: integer;
       procedure   SetPoolFree5(const x:integer);
       function    GetPoolFree6: integer;
       procedure   SetPoolFree6(const x:integer);
       function    GetPoolFree7: integer;
       procedure   SetPoolFree7(const x:integer);
       function    GetCodeX: integer;
       procedure   SetCodeX(const x:integer);
       function    GetCase: integer;
       procedure   SetCase(const x:integer);
       function    GetG205: integer;
       procedure   SetG205(const x:integer);
       function    GetLicense: shortstring;
       procedure   SetLicense(const x:shortstring);
       function    GetTopMargin: integer;
       procedure   SetTopMargin(const x:integer);
       function    GetLeftMargin: integer;
       procedure   SetLeftMargin(const x:integer);
       function    GetBotMargin: integer;
       procedure   SetBotMargin(const x:integer);
       function    GetDumpParms: integer;
       procedure   SetDumpParms(const x:integer);
       function    GetProfile: integer;
       procedure   SetProfile(const x:integer);
       function    GetInputDir1: shortstring;
       procedure   SetInputDir1(const x:shortstring);
       function    GetInputDir2: shortstring;
       procedure   SetInputDir2(const x:shortstring);
       function    GetInputDir3: shortstring;
       procedure   SetInputDir3(const x:shortstring);
       function    GetInputDir4: shortstring;
       procedure   SetInputDir4(const x:shortstring);
       function    GetInputDir5: shortstring;
       procedure   SetInputDir5(const x:shortstring);
       function    GetInputDir6: shortstring;
       procedure   SetInputDir6(const x:shortstring);
       function    GetInputDir7: shortstring;
       procedure   SetInputDir7(const x:shortstring);
       function    GetInputDir8: shortstring;
       procedure   SetInputDir8(const x:shortstring);
       function    GetInputDir9: shortstring;
       procedure   SetInputDir9(const x:shortstring);
       function    GetInputDir10: shortstring;
       procedure   SetInputDir10(const x:shortstring);
       function    GetInputDir11: shortstring;
       procedure   SetInputDir11(const x:shortstring);
       function    GetInputDir12: shortstring;
       procedure   SetInputDir12(const x:shortstring);
       function    GetInputDir13: shortstring;
       procedure   SetInputDir13(const x:shortstring);
       function    GetInputDir14: shortstring;
       procedure   SetInputDir14(const x:shortstring);
       function    GetInputDir15: shortstring;
       procedure   SetInputDir15(const x:shortstring);
       function    GetInputDir16: shortstring;
       procedure   SetInputDir16(const x:shortstring);
       function    GetInputDir17: shortstring;
       procedure   SetInputDir17(const x:shortstring);
       function    GetInputDir18: shortstring;
       procedure   SetInputDir18(const x:shortstring);
       function    GetInputDir19: shortstring;
       procedure   SetInputDir19(const x:shortstring);
       function    GetInputDir20: shortstring;
       procedure   SetInputDir20(const x:shortstring);
       function    GetInputDir21: shortstring;
       procedure   SetInputDir21(const x:shortstring);
       function    GetInputDir22: shortstring;
       procedure   SetInputDir22(const x:shortstring);
       function    GetInputDir23: shortstring;
       procedure   SetInputDir23(const x:shortstring);
       function    GetInputDir24: shortstring;
       procedure   SetInputDir24(const x:shortstring);
       function    GetInputDir25: shortstring;
       procedure   SetInputDir25(const x:shortstring);
       function    GetInputDir26: shortstring;
       procedure   SetInputDir26(const x:shortstring);
       function    GetInputDir27: shortstring;
       procedure   SetInputDir27(const x:shortstring);
       function    GetInputDir28: shortstring;
       procedure   SetInputDir28(const x:shortstring);
       function    GetInputDir29: shortstring;
       procedure   SetInputDir29(const x:shortstring);
       function    GetInputDir30: shortstring;
       procedure   SetInputDir30(const x:shortstring);
       function    GetInputDir31: shortstring;
       procedure   SetInputDir31(const x:shortstring);
       function    GetInputDir32: shortstring;
       procedure   SetInputDir32(const x:shortstring);
       function    GetInputDir33: shortstring;
       procedure   SetInputDir33(const x:shortstring);
       function    GetInputDir34: shortstring;
       procedure   SetInputDir34(const x:shortstring);
       function    GetInputDir35: shortstring;
       procedure   SetInputDir35(const x:shortstring);
       function    GetInputDir36: shortstring;
       procedure   SetInputDir36(const x:shortstring);
       function    GetInputDir37: shortstring;
       procedure   SetInputDir37(const x:shortstring);
       function    GetInputDir38: shortstring;
       procedure   SetInputDir38(const x:shortstring);
       function    GetInputDir39: shortstring;
       procedure   SetInputDir39(const x:shortstring);
       function    GetInputDir40: shortstring;
       procedure   SetInputDir40(const x:shortstring);
       function    GetInputDir: shortstring;
       procedure   SetInputDir(const x:shortstring);
       function    GetLibIncDir: shortstring;
       procedure   SetLibIncDir(const x:shortstring);
       function    GetSysIncDir: shortstring;
       procedure   SetSysIncDir(const x:shortstring);
       function    GetUser1: shortstring;
       procedure   SetUser1(const x:shortstring);
       function    GetUser2: shortstring;
       procedure   SetUser2(const x:shortstring);
       function    GetUser3: shortstring;
       procedure   SetUser3(const x:shortstring);
       function    GetUser4: shortstring;
       procedure   SetUser4(const x:shortstring);
       function    GetUser5: shortstring;
       procedure   SetUser5(const x:shortstring);
       function    GetForceWork: integer;
       procedure   SetForceWork(const x:integer);
       function    GetCErr: integer;
       procedure   SetCErr(const x:integer);
       function    GetFErr: shortstring;
       procedure   SetFErr(const x:shortstring);
       function    GetOptFile: integer;
       procedure   SetOptFile(const x:integer);
       function    GetFSave: integer;
       procedure   SetFSave(const x:integer);
       function    GetNlCon: integer;
       procedure   SetNlCon(const x:integer);
       function    GetDumpOpt: integer;
       procedure   SetDumpOpt(const x:integer);
       function    GetErrMsg: integer;
       procedure   SetErrMsg(const x:integer);
       function    GetOpt: integer;
       procedure   SetOpt(const x:integer);
       function    GetRelPath: integer;
       procedure   SetRelPath(const x:integer);
       function    GetGLanguage: integer;
       procedure   SetGLanguage(const x:integer);
       function    GetGFinclude: integer;
       procedure   SetGFinclude(const x:integer);
       function    GetUnitType: shortstring;
       procedure   SetUnitType(const x:shortstring);
       function    GetGFImplicit: integer;
       procedure   SetGFImplicit(const x:integer);
       function    GetGFExt: integer;
       procedure   SetGFExt(const x:integer);
       function    GetStringChk: integer;
       procedure   SetStringChk(const x:integer);
       function    GetReference: shortstring;
       procedure   SetReference(const x:shortstring);
       function    GetOptDir: shortstring;
       procedure   SetOptDir(const x:shortstring);
       function    GetExecErr: integer;
       procedure   SetExecErr(const x:integer);
       function    GetErrorLog: integer;
       procedure   SetErrorLog(const x:integer);
       function    GetLimRow: integer;
       procedure   SetLimRow(const x:integer);
       function    GetLimCol: integer;
       procedure   SetLimCol(const x:integer);
       function    GetCharSet: integer;
       procedure   SetCharSet(const x:integer);
       function    GetKeep: integer;
       procedure   SetKeep(const x:integer);
       function    GetIDE: integer;
       procedure   SetIDE(const x:integer);
       function    GetTraceOpt: integer;
       procedure   SetTraceOpt(const x:integer);
       function    GetGDX: shortstring;
       procedure   SetGDX(const x:shortstring);
       function    GetIterLim: integer;
       procedure   SetIterLim(const x:integer);
       function    GetDomLim: integer;
       procedure   SetDomLim(const x:integer);
       function    GetResLim: double;
       procedure   SetResLim(const x:double);
       function    GetOptCR: double;
       procedure   SetOptCR(const x:double);
       function    GetOptCA: double;
       procedure   SetOptCA(const x:double);
       function    GetSysOut: integer;
       procedure   SetSysOut(const x:integer);
       function    GetSolPrint: integer;
       procedure   SetSolPrint(const x:integer);
       function    GetBratio: double;
       procedure   SetBratio(const x:double);
       function    GetHoldFixed: integer;
       procedure   SetHoldFixed(const x:integer);
       function    GetNodLim: integer;
       procedure   SetNodLim(const x:integer);
       function    GetWorkFactor: double;
       procedure   SetWorkFactor(const x:double);
       function    GetWorkSpace: double;
       procedure   SetWorkSpace(const x:double);
       function    GetForLim: integer;
       procedure   SetForLim(const x:integer);
       function    GetSeed: integer;
       procedure   SetSeed(const x:integer);
       function    GetOn115: integer;
       procedure   SetOn115(const x:integer);
       function    GetExecMode: integer;
       procedure   SetExecMode(const x:integer);
       function    GetInteractiveSolver: integer;
       procedure   SetInteractiveSolver(const x:integer);
       function    GetPLicense: shortstring;
       procedure   SetPLicense(const x:shortstring);
       function    GetJobTrace: shortstring;
       procedure   SetJobTrace(const x:shortstring);
       function    GetWarnings: integer;
       procedure   SetWarnings(const x:integer);
       function    GetTraceLevel: integer;
       procedure   SetTraceLevel(const x:integer);
       function    GetSetType: integer;
       procedure   SetSetType(const x:integer);
       function    GetTimer: integer;
       procedure   SetTimer(const x:integer);
       function    GetFileCase: integer;
       procedure   SetFileCase(const x:integer);
       function    GetSavePoint: integer;
       procedure   SetSavePoint(const x:integer);
       function    GetSolveLink: integer;
       procedure   SetSolveLink(const x:integer);
       function    GetSys11: integer;
       procedure   SetSys11(const x:integer);
       function    GetSys12: integer;
       procedure   SetSys12(const x:integer);
       function    GetZeroRes: double;
       procedure   SetZeroRes(const x:double);
       function    GetZeroResRep: integer;
       procedure   SetZeroResRep(const x:integer);
       function    GetHeapLimit: double;
       procedure   SetHeapLimit(const x:double);
       function    GetScrExt: shortstring;
       procedure   SetScrExt(const x:shortstring);
       function    GetProcDir: shortstring;
       procedure   SetProcDir(const x:shortstring);
       function    GetgdxCompress: integer;
       procedure   SetgdxCompress(const x:integer);
       function    GetgdxConvert: shortstring;
       procedure   SetgdxConvert(const x:shortstring);
       function    GetAppendExpand: integer;
       procedure   SetAppendExpand(const x:integer);
       function    GetETLim: double;
       procedure   SetETLim(const x:double);
       function    GetProfileTol: double;
       procedure   SetProfileTol(const x:double);
       function    GetProfileFile: shortstring;
       procedure   SetProfileFile(const x:shortstring);
       function    GetMaxProcDir: integer;
       procedure   SetMaxProcDir(const x:integer);
       function    GetInteger1: integer;
       procedure   SetInteger1(const x:integer);
       function    GetInteger2: integer;
       procedure   SetInteger2(const x:integer);
       function    GetInteger3: integer;
       procedure   SetInteger3(const x:integer);
       function    GetInteger4: integer;
       procedure   SetInteger4(const x:integer);
       function    GetInteger5: integer;
       procedure   SetInteger5(const x:integer);
       function    GetGridScript: shortstring;
       procedure   SetGridScript(const x:shortstring);
       function    GetThreads: integer;
       procedure   SetThreads(const x:integer);
       function    GetUseDLL: integer;
       procedure   SetUseDLL(const x:integer);
       function    GetDebug: integer;
       procedure   SetDebug(const x:integer);
       function    GetPID2Error: integer;
       procedure   SetPID2Error(const x:integer);
    public
       constructor Create(const ASysdir: shortstring; var Msg: ShortString);
       destructor  Destroy; override;
       procedure   ProcessCommandLine;
       function    MessageCount: integer;
       procedure   ErrorCount(var ierrors, iwarnings: integer);
       procedure   GetMessage(N: integer; var Msg: ShortString);
       procedure   WriteParameters(const fn: shortstring);
       function    RunExec(var Msg: shortstring; verbose: integer): integer;
       property    gxPtr : pointer read pgxptr;
       property    LP: shortstring read GetLP write SetLP;
       property    MIP: shortstring read GetMIP write SetMIP;
       property    RMIP: shortstring read GetRMIP write SetRMIP;
       property    NLP: shortstring read GetNLP write SetNLP;
       property    MCP: shortstring read GetMCP write SetMCP;
       property    MPEC: shortstring read GetMPEC write SetMPEC;
       property    RMPEC: shortstring read GetRMPEC write SetRMPEC;
       property    CNS: shortstring read GetCNS write SetCNS;
       property    DNLP: shortstring read GetDNLP write SetDNLP;
       property    RMINLP: shortstring read GetRMINLP write SetRMINLP;
       property    MINLP: shortstring read GetMINLP write SetMINLP;
       property    QCP: shortstring read GetQCP write SetQCP;
       property    MIQCP: shortstring read GetMIQCP write SetMIQCP;
       property    RMIQCP: shortstring read GetRMIQCP write SetRMIQCP;
       property    EMP: shortstring read GetEMP write SetEMP;
       property    Restart: shortstring read GetRestart write SetRestart;
       property    Input: shortstring read GetInput write SetInput;
       property    Output: shortstring read GetOutput write SetOutput;
       property    Save: shortstring read GetSave write SetSave;
       property    Symbol: shortstring read GetSymbol write SetSymbol;
       property    XSave: shortstring read GetXSave write SetXSave;
       property    Expand: shortstring read GetExpand write SetExpand;
       property    PageWidth: integer read GetPageWidth write SetPageWidth;
       property    PageSize: integer read GetPageSize write SetPageSize;
       property    PageContr: integer read GetPageContr write SetPageContr;
       property    Action: shortstring read GetAction write SetAction;
       property    SubSys: shortstring read GetSubSys write SetSubSys;
       property    ErrNam: shortstring read GetErrNam write SetErrNam;
       property    ScrDir: shortstring read GetScrDir write SetScrDir;
       property    ScrNam: shortstring read GetScrNam write SetScrNam;
       property    SysDir: shortstring read GetSysDir write SetSysDir;
       property    CurDir: shortstring read GetCurDir write SetCurDir;
       property    WorkDir: shortstring read GetWorkDir write SetWorkDir;
       property    PutDir: shortstring read GetPutDir write SetPutDir;
       property    GridDir: shortstring read GetGridDir write SetGridDir;
       property    ScriptNext: shortstring read GetScriptNext write SetScriptNext;
       property    ScriptExit: shortstring read GetScriptExit write SetScriptExit;
       property    ScriptFrst: shortstring read GetScriptFrst write SetScriptFrst;
       property    LogLine: integer read GetLogLine write SetLogLine;
       property    LogOption: integer read GetLogOption write SetLogOption;
       property    LogFile: shortstring read GetLogFile write SetLogFile;
       property    Trace: shortstring read GetTrace write SetTrace;
       property    AppendOut: integer read GetAppendOut write SetAppendOut;
       property    AppendLog: integer read GetAppendLog write SetAppendLog;
       property    StepSum: integer read GetStepSum write SetStepSum;
       property    MultiPass: integer read GetMultiPass write SetMultiPass;
       property    Suppress: integer read GetSuppress write SetSuppress;
       property    DFormat: integer read GetDFormat write SetDFormat;
       property    TFormat: integer read GetTFormat write SetTFormat;
       property    TabIn: integer read GetTabIn write SetTabIn;
       property    CtrlZ: integer read GetCtrlZ write SetCtrlZ;
       property    CtrlM: integer read GetCtrlM write SetCtrlM;
       property    SolverCntr: shortstring read GetSolverCntr write SetSolverCntr;
       property    SolverMatr: shortstring read GetSolverMatr write SetSolverMatr;
       property    SolverInst: shortstring read GetSolverInst write SetSolverInst;
       property    SolverStat: shortstring read GetSolverStat write SetSolverStat;
       property    SolverSolu: shortstring read GetSolverSolu write SetSolverSolu;
       property    SolverDict: shortstring read GetSolverDict write SetSolverDict;
       property    PoolUse: integer read GetPoolUse write SetPoolUse;
       property    PoolFree1: integer read GetPoolFree1 write SetPoolFree1;
       property    PoolFree2: integer read GetPoolFree2 write SetPoolFree2;
       property    PoolFree3: integer read GetPoolFree3 write SetPoolFree3;
       property    PoolFree4: integer read GetPoolFree4 write SetPoolFree4;
       property    PoolFree5: integer read GetPoolFree5 write SetPoolFree5;
       property    PoolFree6: integer read GetPoolFree6 write SetPoolFree6;
       property    PoolFree7: integer read GetPoolFree7 write SetPoolFree7;
       property    CodeX: integer read GetCodeX write SetCodeX;
       property    G205: integer read GetG205 write SetG205;
       property    License: shortstring read GetLicense write SetLicense;
       property    TopMargin: integer read GetTopMargin write SetTopMargin;
       property    LeftMargin: integer read GetLeftMargin write SetLeftMargin;
       property    BotMargin: integer read GetBotMargin write SetBotMargin;
       property    DumpParms: integer read GetDumpParms write SetDumpParms;
       property    Profile: integer read GetProfile write SetProfile;
       property    InputDir1: shortstring read GetInputDir1 write SetInputDir1;
       property    InputDir2: shortstring read GetInputDir2 write SetInputDir2;
       property    InputDir3: shortstring read GetInputDir3 write SetInputDir3;
       property    InputDir4: shortstring read GetInputDir4 write SetInputDir4;
       property    InputDir5: shortstring read GetInputDir5 write SetInputDir5;
       property    InputDir6: shortstring read GetInputDir6 write SetInputDir6;
       property    InputDir7: shortstring read GetInputDir7 write SetInputDir7;
       property    InputDir8: shortstring read GetInputDir8 write SetInputDir8;
       property    InputDir9: shortstring read GetInputDir9 write SetInputDir9;
       property    InputDir10: shortstring read GetInputDir10 write SetInputDir10;
       property    InputDir11: shortstring read GetInputDir11 write SetInputDir11;
       property    InputDir12: shortstring read GetInputDir12 write SetInputDir12;
       property    InputDir13: shortstring read GetInputDir13 write SetInputDir13;
       property    InputDir14: shortstring read GetInputDir14 write SetInputDir14;
       property    InputDir15: shortstring read GetInputDir15 write SetInputDir15;
       property    InputDir16: shortstring read GetInputDir16 write SetInputDir16;
       property    InputDir17: shortstring read GetInputDir17 write SetInputDir17;
       property    InputDir18: shortstring read GetInputDir18 write SetInputDir18;
       property    InputDir19: shortstring read GetInputDir19 write SetInputDir19;
       property    InputDir20: shortstring read GetInputDir20 write SetInputDir20;
       property    InputDir21: shortstring read GetInputDir21 write SetInputDir21;
       property    InputDir22: shortstring read GetInputDir22 write SetInputDir22;
       property    InputDir23: shortstring read GetInputDir23 write SetInputDir23;
       property    InputDir24: shortstring read GetInputDir24 write SetInputDir24;
       property    InputDir25: shortstring read GetInputDir25 write SetInputDir25;
       property    InputDir26: shortstring read GetInputDir26 write SetInputDir26;
       property    InputDir27: shortstring read GetInputDir27 write SetInputDir27;
       property    InputDir28: shortstring read GetInputDir28 write SetInputDir28;
       property    InputDir29: shortstring read GetInputDir29 write SetInputDir29;
       property    InputDir30: shortstring read GetInputDir30 write SetInputDir30;
       property    InputDir31: shortstring read GetInputDir31 write SetInputDir31;
       property    InputDir32: shortstring read GetInputDir32 write SetInputDir32;
       property    InputDir33: shortstring read GetInputDir33 write SetInputDir33;
       property    InputDir34: shortstring read GetInputDir34 write SetInputDir34;
       property    InputDir35: shortstring read GetInputDir35 write SetInputDir35;
       property    InputDir36: shortstring read GetInputDir36 write SetInputDir36;
       property    InputDir37: shortstring read GetInputDir37 write SetInputDir37;
       property    InputDir38: shortstring read GetInputDir38 write SetInputDir38;
       property    InputDir39: shortstring read GetInputDir39 write SetInputDir39;
       property    InputDir40: shortstring read GetInputDir40 write SetInputDir40;
       property    InputDir: shortstring read GetInputDir write SetInputDir;
       property    LibIncDir: shortstring read GetLibIncDir write SetLibIncDir;
       property    SysIncDir: shortstring read GetSysIncDir write SetSysIncDir;
       property    User1: shortstring read GetUser1 write SetUser1;
       property    User2: shortstring read GetUser2 write SetUser2;
       property    User3: shortstring read GetUser3 write SetUser3;
       property    User4: shortstring read GetUser4 write SetUser4;
       property    User5: shortstring read GetUser5 write SetUser5;
       property    ForceWork: integer read GetForceWork write SetForceWork;
       property    CErr: integer read GetCErr write SetCErr;
       property    FErr: shortstring read GetFErr write SetFErr;
       property    OptFile: integer read GetOptFile write SetOptFile;
       property    FSave: integer read GetFSave write SetFSave;
       property    NlCon: integer read GetNlCon write SetNlCon;
       property    DumpOpt: integer read GetDumpOpt write SetDumpOpt;
       property    ErrMsg: integer read GetErrMsg write SetErrMsg;
       property    Opt: integer read GetOpt write SetOpt;
       property    RelPath: integer read GetRelPath write SetRelPath;
       property    GLanguage: integer read GetGLanguage write SetGLanguage;
       property    GFinclude: integer read GetGFinclude write SetGFinclude;
       property    UnitType: shortstring read GetUnitType write SetUnitType;
       property    GFImplicit: integer read GetGFImplicit write SetGFImplicit;
       property    GFExt: integer read GetGFExt write SetGFExt;
       property    StringChk: integer read GetStringChk write SetStringChk;
       property    Reference: shortstring read GetReference write SetReference;
       property    OptDir: shortstring read GetOptDir write SetOptDir;
       property    ExecErr: integer read GetExecErr write SetExecErr;
       property    ErrorLog: integer read GetErrorLog write SetErrorLog;
       property    LimRow: integer read GetLimRow write SetLimRow;
       property    LimCol: integer read GetLimCol write SetLimCol;
       property    CharSet: integer read GetCharSet write SetCharSet;
       property    Keep: integer read GetKeep write SetKeep;
       property    IDE: integer read GetIDE write SetIDE;
       property    TraceOpt: integer read GetTraceOpt write SetTraceOpt;
       property    GDX: shortstring read GetGDX write SetGDX;
       property    IterLim: integer read GetIterLim write SetIterLim;
       property    DomLim: integer read GetDomLim write SetDomLim;
       property    ResLim: double read GetResLim write SetResLim;
       property    OptCR: double read GetOptCR write SetOptCR;
       property    OptCA: double read GetOptCA write SetOptCA;
       property    SysOut: integer read GetSysOut write SetSysOut;
       property    SolPrint: integer read GetSolPrint write SetSolPrint;
       property    Bratio: double read GetBratio write SetBratio;
       property    HoldFixed: integer read GetHoldFixed write SetHoldFixed;
       property    NodLim: integer read GetNodLim write SetNodLim;
       property    WorkFactor: double read GetWorkFactor write SetWorkFactor;
       property    WorkSpace: double read GetWorkSpace write SetWorkSpace;
       property    ForLim: integer read GetForLim write SetForLim;
       property    Seed: integer read GetSeed write SetSeed;
       property    On115: integer read GetOn115 write SetOn115;
       property    ExecMode: integer read GetExecMode write SetExecMode;
       property    InteractiveSolver: integer read GetInteractiveSolver write SetInteractiveSolver;
       property    PLicense: shortstring read GetPLicense write SetPLicense;
       property    JobTrace: shortstring read GetJobTrace write SetJobTrace;
       property    Warnings: integer read GetWarnings write SetWarnings;
       property    TraceLevel: integer read GetTraceLevel write SetTraceLevel;
       property    SetType: integer read GetSetType write SetSetType;
       property    Timer: integer read GetTimer write SetTimer;
       property    FileCase: integer read GetFileCase write SetFileCase;
       property    SavePoint: integer read GetSavePoint write SetSavePoint;
       property    SolveLink: integer read GetSolveLink write SetSolveLink;
       property    Sys11: integer read GetSys11 write SetSys11;
       property    Sys12: integer read GetSys12 write SetSys12;
       property    ZeroRes: double read GetZeroRes write SetZeroRes;
       property    ZeroResRep: integer read GetZeroResRep write SetZeroResRep;
       property    HeapLimit: double read GetHeapLimit write SetHeapLimit;
       property    ScrExt: shortstring read GetScrExt write SetScrExt;
       property    ProcDir: shortstring read GetProcDir write SetProcDir;
       property    gdxCompress: integer read GetgdxCompress write SetgdxCompress;
       property    gdxConvert: shortstring read GetgdxConvert write SetgdxConvert;
       property    AppendExpand: integer read GetAppendExpand write SetAppendExpand;
       property    ETLim: double read GetETLim write SetETLim;
       property    ProfileTol: double read GetProfileTol write SetProfileTol;
       property    ProfileFile: shortstring read GetProfileFile write SetProfileFile;
       property    MaxProcDir: integer read GetMaxProcDir write SetMaxProcDir;
       property    Integer1: integer read GetInteger1 write SetInteger1;
       property    Integer2: integer read GetInteger2 write SetInteger2;
       property    Integer3: integer read GetInteger3 write SetInteger3;
       property    Integer4: integer read GetInteger4 write SetInteger4;
       property    Integer5: integer read GetInteger5 write SetInteger5;
       property    GridScript: shortstring read GetGridScript write SetGridScript;
       property    Threads: integer read GetThreads write SetThreads;
       property    UseDLL: integer read GetUseDLL write SetUseDLL;
       property    Debug: integer read GetDebug write SetDebug;
       property    PID2Error: integer read GetPID2Error write SetPID2Error;
       property    gmsCase: integer read GetCase write SetCase;
       property    R: shortstring read GetRestart write SetRestart;
       property    I: shortstring read GetInput write SetInput;
       property    O: shortstring read GetOutput write SetOutput;
       property    S: shortstring read GetSave write SetSave;
       property    XS: shortstring read GetXSave write SetXSave;
       property    EF: shortstring read GetExpand write SetExpand;
       property    PW: integer read GetPageWidth write SetPageWidth;
       property    PS: integer read GetPageSize write SetPageSize;
       property    PC: integer read GetPageContr write SetPageContr;
       property    A: shortstring read GetAction write SetAction;
       property    SD: shortstring read GetScrDir write SetScrDir;
       property    SN: shortstring read GetScrNam write SetScrNam;
       property    CDir: shortstring read GetCurDir write SetCurDir;
       property    WDir: shortstring read GetWorkDir write SetWorkDir;
       property    PDir: shortstring read GetPutDir write SetPutDir;
       property    GDir: shortstring read GetGridDir write SetGridDir;
       property    SCRIPT: shortstring read GetScriptNext write SetScriptNext;
       property    SF: shortstring read GetScriptFrst write SetScriptFrst;
       property    LL: integer read GetLogLine write SetLogLine;
       property    lo: integer read GetLogOption write SetLogOption;
       property    LF: shortstring read GetLogFile write SetLogFile;
       property    AO: integer read GetAppendOut write SetAppendOut;
       property    AL: integer read GetAppendLog write SetAppendLog;
       property    MP: integer read GetMultiPass write SetMultiPass;
       property    DF: integer read GetDFormat write SetDFormat;
       property    TF: integer read GetTFormat write SetTFormat;
       property    SCNTR: shortstring read GetSolverCntr write SetSolverCntr;
       property    SMATR: shortstring read GetSolverMatr write SetSolverMatr;
       property    SINST: shortstring read GetSolverInst write SetSolverInst;
       property    SSTAT: shortstring read GetSolverStat write SetSolverStat;
       property    SSOLU: shortstring read GetSolverSolu write SetSolverSolu;
       property    SDICT: shortstring read GetSolverDict write SetSolverDict;
       property    PU: integer read GetPoolUse write SetPoolUse;
       property    PF1: integer read GetPoolFree1 write SetPoolFree1;
       property    PF2: integer read GetPoolFree2 write SetPoolFree2;
       property    PF3: integer read GetPoolFree3 write SetPoolFree3;
       property    PF4: integer read GetPoolFree4 write SetPoolFree4;
       property    PF5: integer read GetPoolFree5 write SetPoolFree5;
       property    PF6: integer read GetPoolFree6 write SetPoolFree6;
       property    PF7: integer read GetPoolFree7 write SetPoolFree7;
       property    CX: integer read GetCodeX write SetCodeX;
       property    TM: integer read GetTopMargin write SetTopMargin;
       property    LM: integer read GetLeftMargin write SetLeftMargin;
       property    BM: integer read GetBotMargin write SetBotMargin;
       property    DP: integer read GetDumpParms write SetDumpParms;
       property    IDIR1: shortstring read GetInputDir1 write SetInputDir1;
       property    IDIR2: shortstring read GetInputDir2 write SetInputDir2;
       property    IDIR3: shortstring read GetInputDir3 write SetInputDir3;
       property    IDIR4: shortstring read GetInputDir4 write SetInputDir4;
       property    IDIR5: shortstring read GetInputDir5 write SetInputDir5;
       property    IDIR6: shortstring read GetInputDir6 write SetInputDir6;
       property    IDIR7: shortstring read GetInputDir7 write SetInputDir7;
       property    IDIR8: shortstring read GetInputDir8 write SetInputDir8;
       property    IDIR9: shortstring read GetInputDir9 write SetInputDir9;
       property    IDIR10: shortstring read GetInputDir10 write SetInputDir10;
       property    IDIR11: shortstring read GetInputDir11 write SetInputDir11;
       property    IDIR12: shortstring read GetInputDir12 write SetInputDir12;
       property    IDIR13: shortstring read GetInputDir13 write SetInputDir13;
       property    IDIR14: shortstring read GetInputDir14 write SetInputDir14;
       property    IDIR15: shortstring read GetInputDir15 write SetInputDir15;
       property    IDIR16: shortstring read GetInputDir16 write SetInputDir16;
       property    IDIR17: shortstring read GetInputDir17 write SetInputDir17;
       property    IDIR18: shortstring read GetInputDir18 write SetInputDir18;
       property    IDIR19: shortstring read GetInputDir19 write SetInputDir19;
       property    IDIR20: shortstring read GetInputDir20 write SetInputDir20;
       property    IDIR21: shortstring read GetInputDir21 write SetInputDir21;
       property    IDIR22: shortstring read GetInputDir22 write SetInputDir22;
       property    IDIR23: shortstring read GetInputDir23 write SetInputDir23;
       property    IDIR24: shortstring read GetInputDir24 write SetInputDir24;
       property    IDIR25: shortstring read GetInputDir25 write SetInputDir25;
       property    IDIR26: shortstring read GetInputDir26 write SetInputDir26;
       property    IDIR27: shortstring read GetInputDir27 write SetInputDir27;
       property    IDIR28: shortstring read GetInputDir28 write SetInputDir28;
       property    IDIR29: shortstring read GetInputDir29 write SetInputDir29;
       property    IDIR30: shortstring read GetInputDir30 write SetInputDir30;
       property    IDIR31: shortstring read GetInputDir31 write SetInputDir31;
       property    IDIR32: shortstring read GetInputDir32 write SetInputDir32;
       property    IDIR33: shortstring read GetInputDir33 write SetInputDir33;
       property    IDIR34: shortstring read GetInputDir34 write SetInputDir34;
       property    IDIR35: shortstring read GetInputDir35 write SetInputDir35;
       property    IDIR36: shortstring read GetInputDir36 write SetInputDir36;
       property    IDIR37: shortstring read GetInputDir37 write SetInputDir37;
       property    IDIR38: shortstring read GetInputDir38 write SetInputDir38;
       property    IDIR39: shortstring read GetInputDir39 write SetInputDir39;
       property    IDIR40: shortstring read GetInputDir40 write SetInputDir40;
       property    IDIR: shortstring read GetInputDir write SetInputDir;
       property    LDIR: shortstring read GetLibIncDir write SetLibIncDir;
       property    SDIR: shortstring read GetSysIncDir write SetSysIncDir;
       property    U1: shortstring read GetUser1 write SetUser1;
       property    U2: shortstring read GetUser2 write SetUser2;
       property    U3: shortstring read GetUser3 write SetUser3;
       property    U4: shortstring read GetUser4 write SetUser4;
       property    U5: shortstring read GetUser5 write SetUser5;
       property    FW: integer read GetForceWork write SetForceWork;
       property    GLAN: integer read GetGLanguage write SetGLanguage;
       property    GFINC: integer read GetGFinclude write SetGFinclude;
       property    UT: shortstring read GetUnitType write SetUnitType;
       property    GFIMP: integer read GetGFImplicit write SetGFImplicit;
       property    RF: shortstring read GetReference write SetReference;
       property    ER: integer read GetErrorLog write SetErrorLog;
       property    JT: shortstring read GetJobTrace write SetJobTrace;
       property    TL: integer read GetTraceLevel write SetTraceLevel;
       property    ST: integer read GetSetType write SetSetType;
       property    SP: integer read GetSavePoint write SetSavePoint;
       property    SL: integer read GetSolveLink write SetSolveLink;
       property    HL: double read GetHeapLimit write SetHeapLimit;
       property    SE: shortstring read GetScrExt write SetScrExt;
       property    AE: integer read GetAppendExpand write SetAppendExpand;
       property    ETL: double read GetETLim write SetETLim;
       property    PTOL: double read GetProfileTol write SetProfileTol;
       property    PFILE: shortstring read GetProfileFile write SetProfileFile;
       property    GScript: shortstring read GetGridScript write SetGridScript;
    end;


implementation

uses
   gamsxdcpdef;


constructor TGamsOptions.Create(const ASysdir: shortstring; var Msg: ShortString);
var
   N: integer;
   filePar: shortstring;
begin
inherited Create;
FSysDir := ASysDir;
if not gamsxCreateD(pgxptr, FSysDir, Msg)
then
   begin
   Msg := '*** Error during GAMSX initialization:' + Msg;
   exit;
   end;
{$IFDEF USEOPTOBJ}
FOpt := gmsoptions.TGMSOptions.Create(Msg);
Msg := '';
{$ELSE}
FOpt := TGMSOptions.CreateD(FSysDir, Msg);
{$ENDIF}
if Msg = ''
then
   begin
   N := FOpt.OptReadDefinition(FSysDir + PathDelim + 'optgams.def');
   if N > 0
   then
      Msg := 'Error opening optgams.def; error = ' + IntToStr(N)
   else
      begin
      filePar := 'gmsprmNT.txt';
      N := FOpt.OptReadParameterFile(Fsysdir + PathDelim + filePar);
      if N <> 0
      then
         Msg := 'Error opening ' + filepar + '; error = ' + IntToStr(N)
      else
         if FOpt.optMessageCount <> 0
         then
            FOpt.optGetMessage(1, Msg, N);
      SysDir := FSysDir;
      end;
   end;
end;

destructor TGamsOptions.Destroy;
begin
FOpt.Free;
if pgxptr <> nil then gamsxFree(pgxptr);
inherited destroy;
end;

function TGamsOptions.GetString(const name: shortstring): shortstring;
var
   n: integer;
begin
n := FOpt.optLookUp(name) + 1;
Assert(N > 0, 'Get' + name);
FOpt.OptGetStrNr(n, Result);
end;

procedure TGamsOptions.SetString(const name: shortstring; const value: shortstring);
var
   n: integer;
begin
n := FOpt.optLookUp(name) + 1;
Assert(N > 0, 'Set' + name);
FOpt.OptSetStrNr(n, value);
end;

function TGamsOptions.GetInteger(const name: shortstring): integer;
var
   n: integer;
begin
n := FOpt.optLookUp(name) + 1;
Assert(N > 0, 'Get' + name);
FOpt.OptGetIntNr(n, Result);
end;

procedure TGamsOptions.SetInteger(const name: shortstring; const value: integer);
var
   n: integer;
begin
n := FOpt.optLookUp(name) + 1;
Assert(N > 0, 'Set' + name);
FOpt.OptSetIntNr(n, value);
end;

function TGamsOptions.GetReal(const name: shortstring): double;
var
   n: integer;
begin
n := FOpt.optLookUp(name) + 1;
Assert(N > 0, 'Get' + name);
FOpt.OptGetDblNr(n, Result);
end;

procedure TGamsOptions.SetReal(const name: shortstring; const value: double);
var
   n: integer;
begin
n := FOpt.optLookUp(name) + 1;
Assert(N > 0, 'Set' + name);
FOpt.OptSetDblNr(n, value);
end;

procedure TGamsOptions.ProcessCommandLine;
var
      L: integer;
      P: PChar;
      F: integer;

   procedure AddChrToP(Ch: Char);
   begin
   if F = 1
   then
      L := L + 1
   else
      begin
      P^ := Ch;
      Inc(P);
      end;
   end;


var
    PCmd: PChar;
    PRes: PChar;
    N  : integer;
begin
//Pass1: calculate length, Pass2: store in P
for F := 1 to 2
do begin
   if F = 1
   then
      L := 0
   else
      begin
      GetMem(P, L);
      PRes := P;
      end;

   AddChrToP('I');
   AddChrToP(' ');
   if ParamCount = 0
   then
      AddChrToP('?')
   else
      begin
      PCmd := GetCommandLine();
      while PCmd^ in [' ', #9]
      do Inc(PCmd);
      //skip the name of executable
      if PCmd^ = '"'
      then
         begin
         Inc(PCmd);
         while not(PCmd^ in ['"', #0])
         do Inc(PCmd);
         if PCmd^ = '"'
         then
            Inc(PCmd);
         end
      else
         begin
         while not(PCmd^ in [' ', #9, #0])
         do Inc(PCmd);
         end;
      while PCmd^ in [' ', #9]
      do Inc(PCmd);
      while PCmd^ <> #0
      do begin
         AddChrToP(PCmd^);
         Inc(PCmd);
         end;
      end;
   AddChrToP(#0);
   end;
N := FOpt.optEOLOnlySet(0);
FOpt.optReadFromPChar(PRes);
FOpt.optEOLOnlySet(N);
FreeMem(PRes);
end;

function TGamsOptions.GetLP: shortstring;
begin
Result := Getstring('LP');
end;
procedure TGamsOptions.SetLP(const x:shortstring);
begin
Setstring('LP',x);
end;

function TGamsOptions.GetMIP: shortstring;
begin
Result := Getstring('MIP');
end;
procedure TGamsOptions.SetMIP(const x:shortstring);
begin
Setstring('MIP',x);
end;

function TGamsOptions.GetRMIP: shortstring;
begin
Result := Getstring('RMIP');
end;
procedure TGamsOptions.SetRMIP(const x:shortstring);
begin
Setstring('RMIP',x);
end;

function TGamsOptions.GetNLP: shortstring;
begin
Result := Getstring('NLP');
end;
procedure TGamsOptions.SetNLP(const x:shortstring);
begin
Setstring('NLP',x);
end;

function TGamsOptions.GetMCP: shortstring;
begin
Result := Getstring('MCP');
end;
procedure TGamsOptions.SetMCP(const x:shortstring);
begin
Setstring('MCP',x);
end;

function TGamsOptions.GetMPEC: shortstring;
begin
Result := Getstring('MPEC');
end;
procedure TGamsOptions.SetMPEC(const x:shortstring);
begin
Setstring('MPEC',x);
end;

function TGamsOptions.GetRMPEC: shortstring;
begin
Result := Getstring('RMPEC');
end;
procedure TGamsOptions.SetRMPEC(const x:shortstring);
begin
Setstring('RMPEC',x);
end;

function TGamsOptions.GetCNS: shortstring;
begin
Result := Getstring('CNS');
end;
procedure TGamsOptions.SetCNS(const x:shortstring);
begin
Setstring('CNS',x);
end;

function TGamsOptions.GetDNLP: shortstring;
begin
Result := Getstring('DNLP');
end;
procedure TGamsOptions.SetDNLP(const x:shortstring);
begin
Setstring('DNLP',x);
end;

function TGamsOptions.GetRMINLP: shortstring;
begin
Result := Getstring('RMINLP');
end;
procedure TGamsOptions.SetRMINLP(const x:shortstring);
begin
Setstring('RMINLP',x);
end;

function TGamsOptions.GetMINLP: shortstring;
begin
Result := Getstring('MINLP');
end;
procedure TGamsOptions.SetMINLP(const x:shortstring);
begin
Setstring('MINLP',x);
end;

function TGamsOptions.GetQCP: shortstring;
begin
Result := Getstring('QCP');
end;
procedure TGamsOptions.SetQCP(const x:shortstring);
begin
Setstring('QCP',x);
end;

function TGamsOptions.GetMIQCP: shortstring;
begin
Result := Getstring('MIQCP');
end;
procedure TGamsOptions.SetMIQCP(const x:shortstring);
begin
Setstring('MIQCP',x);
end;

function TGamsOptions.GetRMIQCP: shortstring;
begin
Result := Getstring('RMIQCP');
end;
procedure TGamsOptions.SetRMIQCP(const x:shortstring);
begin
Setstring('RMIQCP',x);
end;

function TGamsOptions.GetEMP: shortstring;
begin
Result := Getstring('EMP');
end;
procedure TGamsOptions.SetEMP(const x:shortstring);
begin
Setstring('EMP',x);
end;

function TGamsOptions.GetRestart: shortstring;
begin
Result := Getstring('Restart');
end;
procedure TGamsOptions.SetRestart(const x:shortstring);
begin
Setstring('Restart',x);
end;

function TGamsOptions.GetInput: shortstring;
begin
Result := Getstring('Input');
end;
procedure TGamsOptions.SetInput(const x:shortstring);
begin
Setstring('Input',x);
end;

function TGamsOptions.GetOutput: shortstring;
begin
Result := Getstring('Output');
end;
procedure TGamsOptions.SetOutput(const x:shortstring);
begin
Setstring('Output',x);
end;

function TGamsOptions.GetSave: shortstring;
begin
Result := Getstring('Save');
end;
procedure TGamsOptions.SetSave(const x:shortstring);
begin
Setstring('Save',x);
end;

function TGamsOptions.GetSymbol: shortstring;
begin
Result := Getstring('Symbol');
end;
procedure TGamsOptions.SetSymbol(const x:shortstring);
begin
Setstring('Symbol',x);
end;

function TGamsOptions.GetXSave: shortstring;
begin
Result := Getstring('XSave');
end;
procedure TGamsOptions.SetXSave(const x:shortstring);
begin
Setstring('XSave',x);
end;

function TGamsOptions.GetExpand: shortstring;
begin
Result := Getstring('Expand');
end;
procedure TGamsOptions.SetExpand(const x:shortstring);
begin
Setstring('Expand',x);
end;

function TGamsOptions.GetPageWidth: integer;
begin
Result := Getinteger('PageWidth');
end;
procedure TGamsOptions.SetPageWidth(const x:integer);
begin
Setinteger('PageWidth',x);
end;

function TGamsOptions.GetPageSize: integer;
begin
Result := Getinteger('PageSize');
end;
procedure TGamsOptions.SetPageSize(const x:integer);
begin
Setinteger('PageSize',x);
end;

function TGamsOptions.GetPageContr: integer;
begin
Result := Getinteger('PageContr');
end;
procedure TGamsOptions.SetPageContr(const x:integer);
begin
Setinteger('PageContr',x);
end;

function TGamsOptions.GetAction: shortstring;
begin
Result := Getstring('Action');
end;
procedure TGamsOptions.SetAction(const x:shortstring);
begin
Setstring('Action',x);
end;

function TGamsOptions.GetSubSys: shortstring;
begin
Result := Getstring('SubSys');
end;
procedure TGamsOptions.SetSubSys(const x:shortstring);
begin
Setstring('SubSys',x);
end;

function TGamsOptions.GetErrNam: shortstring;
begin
Result := Getstring('ErrNam');
end;
procedure TGamsOptions.SetErrNam(const x:shortstring);
begin
Setstring('ErrNam',x);
end;

function TGamsOptions.GetScrDir: shortstring;
begin
Result := Getstring('ScrDir');
end;
procedure TGamsOptions.SetScrDir(const x:shortstring);
begin
Setstring('ScrDir',x);
end;

function TGamsOptions.GetScrNam: shortstring;
begin
Result := Getstring('ScrNam');
end;
procedure TGamsOptions.SetScrNam(const x:shortstring);
begin
Setstring('ScrNam',x);
end;

function TGamsOptions.GetSysDir: shortstring;
begin
Result := Getstring('SysDir');
end;
procedure TGamsOptions.SetSysDir(const x:shortstring);
begin
Setstring('SysDir',x);
end;

function TGamsOptions.GetCurDir: shortstring;
begin
Result := Getstring('CurDir');
end;
procedure TGamsOptions.SetCurDir(const x:shortstring);
begin
Setstring('CurDir',x);
end;

function TGamsOptions.GetWorkDir: shortstring;
begin
Result := Getstring('WorkDir');
end;
procedure TGamsOptions.SetWorkDir(const x:shortstring);
begin
Setstring('WorkDir',x);
end;

function TGamsOptions.GetPutDir: shortstring;
begin
Result := Getstring('PutDir');
end;
procedure TGamsOptions.SetPutDir(const x:shortstring);
begin
Setstring('PutDir',x);
end;

function TGamsOptions.GetGridDir: shortstring;
begin
Result := Getstring('GridDir');
end;
procedure TGamsOptions.SetGridDir(const x:shortstring);
begin
Setstring('GridDir',x);
end;

function TGamsOptions.GetScriptNext: shortstring;
begin
Result := Getstring('ScriptNext');
end;
procedure TGamsOptions.SetScriptNext(const x:shortstring);
begin
Setstring('ScriptNext',x);
end;

function TGamsOptions.GetScriptExit: shortstring;
begin
Result := Getstring('ScriptExit');
end;
procedure TGamsOptions.SetScriptExit(const x:shortstring);
begin
Setstring('ScriptExit',x);
end;

function TGamsOptions.GetScriptFrst: shortstring;
begin
Result := Getstring('ScriptFrst');
end;
procedure TGamsOptions.SetScriptFrst(const x:shortstring);
begin
Setstring('ScriptFrst',x);
end;

function TGamsOptions.GetLogLine: integer;
begin
Result := Getinteger('LogLine');
end;
procedure TGamsOptions.SetLogLine(const x:integer);
begin
Setinteger('LogLine',x);
end;

function TGamsOptions.GetLogOption: integer;
begin
Result := Getinteger('LogOption');
end;
procedure TGamsOptions.SetLogOption(const x:integer);
begin
Setinteger('LogOption',x);
end;

function TGamsOptions.GetLogFile: shortstring;
begin
Result := Getstring('LogFile');
end;
procedure TGamsOptions.SetLogFile(const x:shortstring);
begin
Setstring('LogFile',x);
end;

function TGamsOptions.GetTrace: shortstring;
begin
Result := Getstring('Trace');
end;
procedure TGamsOptions.SetTrace(const x:shortstring);
begin
Setstring('Trace',x);
end;

function TGamsOptions.GetAppendOut: integer;
begin
Result := Getinteger('AppendOut');
end;
procedure TGamsOptions.SetAppendOut(const x:integer);
begin
Setinteger('AppendOut',x);
end;

function TGamsOptions.GetAppendLog: integer;
begin
Result := Getinteger('AppendLog');
end;
procedure TGamsOptions.SetAppendLog(const x:integer);
begin
Setinteger('AppendLog',x);
end;

function TGamsOptions.GetStepSum: integer;
begin
Result := Getinteger('StepSum');
end;
procedure TGamsOptions.SetStepSum(const x:integer);
begin
Setinteger('StepSum',x);
end;

function TGamsOptions.GetMultiPass: integer;
begin
Result := Getinteger('MultiPass');
end;
procedure TGamsOptions.SetMultiPass(const x:integer);
begin
Setinteger('MultiPass',x);
end;

function TGamsOptions.GetSuppress: integer;
begin
Result := Getinteger('Suppress');
end;
procedure TGamsOptions.SetSuppress(const x:integer);
begin
Setinteger('Suppress',x);
end;

function TGamsOptions.GetDFormat: integer;
begin
Result := Getinteger('DFormat');
end;
procedure TGamsOptions.SetDFormat(const x:integer);
begin
Setinteger('DFormat',x);
end;

function TGamsOptions.GetTFormat: integer;
begin
Result := Getinteger('TFormat');
end;
procedure TGamsOptions.SetTFormat(const x:integer);
begin
Setinteger('TFormat',x);
end;

function TGamsOptions.GetTabIn: integer;
begin
Result := Getinteger('TabIn');
end;
procedure TGamsOptions.SetTabIn(const x:integer);
begin
Setinteger('TabIn',x);
end;

function TGamsOptions.GetCtrlZ: integer;
begin
Result := Getinteger('CtrlZ');
end;
procedure TGamsOptions.SetCtrlZ(const x:integer);
begin
Setinteger('CtrlZ',x);
end;

function TGamsOptions.GetCtrlM: integer;
begin
Result := Getinteger('CtrlM');
end;
procedure TGamsOptions.SetCtrlM(const x:integer);
begin
Setinteger('CtrlM',x);
end;

function TGamsOptions.GetSolverCntr: shortstring;
begin
Result := Getstring('SolverCntr');
end;
procedure TGamsOptions.SetSolverCntr(const x:shortstring);
begin
Setstring('SolverCntr',x);
end;

function TGamsOptions.GetSolverMatr: shortstring;
begin
Result := Getstring('SolverMatr');
end;
procedure TGamsOptions.SetSolverMatr(const x:shortstring);
begin
Setstring('SolverMatr',x);
end;

function TGamsOptions.GetSolverInst: shortstring;
begin
Result := Getstring('SolverInst');
end;
procedure TGamsOptions.SetSolverInst(const x:shortstring);
begin
Setstring('SolverInst',x);
end;

function TGamsOptions.GetSolverStat: shortstring;
begin
Result := Getstring('SolverStat');
end;
procedure TGamsOptions.SetSolverStat(const x:shortstring);
begin
Setstring('SolverStat',x);
end;

function TGamsOptions.GetSolverSolu: shortstring;
begin
Result := Getstring('SolverSolu');
end;
procedure TGamsOptions.SetSolverSolu(const x:shortstring);
begin
Setstring('SolverSolu',x);
end;

function TGamsOptions.GetSolverDict: shortstring;
begin
Result := Getstring('SolverDict');
end;
procedure TGamsOptions.SetSolverDict(const x:shortstring);
begin
Setstring('SolverDict',x);
end;

function TGamsOptions.GetPoolUse: integer;
begin
Result := Getinteger('PoolUse');
end;
procedure TGamsOptions.SetPoolUse(const x:integer);
begin
Setinteger('PoolUse',x);
end;

function TGamsOptions.GetPoolFree1: integer;
begin
Result := Getinteger('PoolFree1');
end;
procedure TGamsOptions.SetPoolFree1(const x:integer);
begin
Setinteger('PoolFree1',x);
end;

function TGamsOptions.GetPoolFree2: integer;
begin
Result := Getinteger('PoolFree2');
end;
procedure TGamsOptions.SetPoolFree2(const x:integer);
begin
Setinteger('PoolFree2',x);
end;

function TGamsOptions.GetPoolFree3: integer;
begin
Result := Getinteger('PoolFree3');
end;
procedure TGamsOptions.SetPoolFree3(const x:integer);
begin
Setinteger('PoolFree3',x);
end;

function TGamsOptions.GetPoolFree4: integer;
begin
Result := Getinteger('PoolFree4');
end;
procedure TGamsOptions.SetPoolFree4(const x:integer);
begin
Setinteger('PoolFree4',x);
end;

function TGamsOptions.GetPoolFree5: integer;
begin
Result := Getinteger('PoolFree5');
end;
procedure TGamsOptions.SetPoolFree5(const x:integer);
begin
Setinteger('PoolFree5',x);
end;

function TGamsOptions.GetPoolFree6: integer;
begin
Result := Getinteger('PoolFree6');
end;
procedure TGamsOptions.SetPoolFree6(const x:integer);
begin
Setinteger('PoolFree6',x);
end;

function TGamsOptions.GetPoolFree7: integer;
begin
Result := Getinteger('PoolFree7');
end;
procedure TGamsOptions.SetPoolFree7(const x:integer);
begin
Setinteger('PoolFree7',x);
end;

function TGamsOptions.GetCodeX: integer;
begin
Result := Getinteger('CodeX');
end;
procedure TGamsOptions.SetCodeX(const x:integer);
begin
Setinteger('CodeX',x);
end;

function TGamsOptions.GetCase: integer;
begin
Result := Getinteger('Case');
end;
procedure TGamsOptions.SetCase(const x:integer);
begin
Setinteger('Case',x);
end;

function TGamsOptions.GetG205: integer;
begin
Result := Getinteger('G205');
end;
procedure TGamsOptions.SetG205(const x:integer);
begin
Setinteger('G205',x);
end;

function TGamsOptions.GetLicense: shortstring;
begin
Result := Getstring('License');
end;
procedure TGamsOptions.SetLicense(const x:shortstring);
begin
Setstring('License',x);
end;

function TGamsOptions.GetTopMargin: integer;
begin
Result := Getinteger('TopMargin');
end;
procedure TGamsOptions.SetTopMargin(const x:integer);
begin
Setinteger('TopMargin',x);
end;

function TGamsOptions.GetLeftMargin: integer;
begin
Result := Getinteger('LeftMargin');
end;
procedure TGamsOptions.SetLeftMargin(const x:integer);
begin
Setinteger('LeftMargin',x);
end;

function TGamsOptions.GetBotMargin: integer;
begin
Result := Getinteger('BotMargin');
end;
procedure TGamsOptions.SetBotMargin(const x:integer);
begin
Setinteger('BotMargin',x);
end;

function TGamsOptions.GetDumpParms: integer;
begin
Result := Getinteger('DumpParms');
end;
procedure TGamsOptions.SetDumpParms(const x:integer);
begin
Setinteger('DumpParms',x);
end;

function TGamsOptions.GetProfile: integer;
begin
Result := Getinteger('Profile');
end;
procedure TGamsOptions.SetProfile(const x:integer);
begin
Setinteger('Profile',x);
end;

function TGamsOptions.GetInputDir1: shortstring;
begin
Result := Getstring('InputDir1');
end;
procedure TGamsOptions.SetInputDir1(const x:shortstring);
begin
Setstring('InputDir1',x);
end;

function TGamsOptions.GetInputDir2: shortstring;
begin
Result := Getstring('InputDir2');
end;
procedure TGamsOptions.SetInputDir2(const x:shortstring);
begin
Setstring('InputDir2',x);
end;

function TGamsOptions.GetInputDir3: shortstring;
begin
Result := Getstring('InputDir3');
end;
procedure TGamsOptions.SetInputDir3(const x:shortstring);
begin
Setstring('InputDir3',x);
end;

function TGamsOptions.GetInputDir4: shortstring;
begin
Result := Getstring('InputDir4');
end;
procedure TGamsOptions.SetInputDir4(const x:shortstring);
begin
Setstring('InputDir4',x);
end;

function TGamsOptions.GetInputDir5: shortstring;
begin
Result := Getstring('InputDir5');
end;
procedure TGamsOptions.SetInputDir5(const x:shortstring);
begin
Setstring('InputDir5',x);
end;

function TGamsOptions.GetInputDir6: shortstring;
begin
Result := Getstring('InputDir6');
end;
procedure TGamsOptions.SetInputDir6(const x:shortstring);
begin
Setstring('InputDir6',x);
end;

function TGamsOptions.GetInputDir7: shortstring;
begin
Result := Getstring('InputDir7');
end;
procedure TGamsOptions.SetInputDir7(const x:shortstring);
begin
Setstring('InputDir7',x);
end;

function TGamsOptions.GetInputDir8: shortstring;
begin
Result := Getstring('InputDir8');
end;
procedure TGamsOptions.SetInputDir8(const x:shortstring);
begin
Setstring('InputDir8',x);
end;

function TGamsOptions.GetInputDir9: shortstring;
begin
Result := Getstring('InputDir9');
end;
procedure TGamsOptions.SetInputDir9(const x:shortstring);
begin
Setstring('InputDir9',x);
end;

function TGamsOptions.GetInputDir10: shortstring;
begin
Result := Getstring('InputDir10');
end;
procedure TGamsOptions.SetInputDir10(const x:shortstring);
begin
Setstring('InputDir10',x);
end;

function TGamsOptions.GetInputDir11: shortstring;
begin
Result := Getstring('InputDir11');
end;
procedure TGamsOptions.SetInputDir11(const x:shortstring);
begin
Setstring('InputDir11',x);
end;

function TGamsOptions.GetInputDir12: shortstring;
begin
Result := Getstring('InputDir12');
end;
procedure TGamsOptions.SetInputDir12(const x:shortstring);
begin
Setstring('InputDir12',x);
end;

function TGamsOptions.GetInputDir13: shortstring;
begin
Result := Getstring('InputDir13');
end;
procedure TGamsOptions.SetInputDir13(const x:shortstring);
begin
Setstring('InputDir13',x);
end;

function TGamsOptions.GetInputDir14: shortstring;
begin
Result := Getstring('InputDir14');
end;
procedure TGamsOptions.SetInputDir14(const x:shortstring);
begin
Setstring('InputDir14',x);
end;

function TGamsOptions.GetInputDir15: shortstring;
begin
Result := Getstring('InputDir15');
end;
procedure TGamsOptions.SetInputDir15(const x:shortstring);
begin
Setstring('InputDir15',x);
end;

function TGamsOptions.GetInputDir16: shortstring;
begin
Result := Getstring('InputDir16');
end;
procedure TGamsOptions.SetInputDir16(const x:shortstring);
begin
Setstring('InputDir16',x);
end;

function TGamsOptions.GetInputDir17: shortstring;
begin
Result := Getstring('InputDir17');
end;
procedure TGamsOptions.SetInputDir17(const x:shortstring);
begin
Setstring('InputDir17',x);
end;

function TGamsOptions.GetInputDir18: shortstring;
begin
Result := Getstring('InputDir18');
end;
procedure TGamsOptions.SetInputDir18(const x:shortstring);
begin
Setstring('InputDir18',x);
end;

function TGamsOptions.GetInputDir19: shortstring;
begin
Result := Getstring('InputDir19');
end;
procedure TGamsOptions.SetInputDir19(const x:shortstring);
begin
Setstring('InputDir19',x);
end;

function TGamsOptions.GetInputDir20: shortstring;
begin
Result := Getstring('InputDir20');
end;
procedure TGamsOptions.SetInputDir20(const x:shortstring);
begin
Setstring('InputDir20',x);
end;

function TGamsOptions.GetInputDir21: shortstring;
begin
Result := Getstring('InputDir21');
end;
procedure TGamsOptions.SetInputDir21(const x:shortstring);
begin
Setstring('InputDir21',x);
end;

function TGamsOptions.GetInputDir22: shortstring;
begin
Result := Getstring('InputDir22');
end;
procedure TGamsOptions.SetInputDir22(const x:shortstring);
begin
Setstring('InputDir22',x);
end;

function TGamsOptions.GetInputDir23: shortstring;
begin
Result := Getstring('InputDir23');
end;
procedure TGamsOptions.SetInputDir23(const x:shortstring);
begin
Setstring('InputDir23',x);
end;

function TGamsOptions.GetInputDir24: shortstring;
begin
Result := Getstring('InputDir24');
end;
procedure TGamsOptions.SetInputDir24(const x:shortstring);
begin
Setstring('InputDir24',x);
end;

function TGamsOptions.GetInputDir25: shortstring;
begin
Result := Getstring('InputDir25');
end;
procedure TGamsOptions.SetInputDir25(const x:shortstring);
begin
Setstring('InputDir25',x);
end;

function TGamsOptions.GetInputDir26: shortstring;
begin
Result := Getstring('InputDir26');
end;
procedure TGamsOptions.SetInputDir26(const x:shortstring);
begin
Setstring('InputDir26',x);
end;

function TGamsOptions.GetInputDir27: shortstring;
begin
Result := Getstring('InputDir27');
end;
procedure TGamsOptions.SetInputDir27(const x:shortstring);
begin
Setstring('InputDir27',x);
end;

function TGamsOptions.GetInputDir28: shortstring;
begin
Result := Getstring('InputDir28');
end;
procedure TGamsOptions.SetInputDir28(const x:shortstring);
begin
Setstring('InputDir28',x);
end;

function TGamsOptions.GetInputDir29: shortstring;
begin
Result := Getstring('InputDir29');
end;
procedure TGamsOptions.SetInputDir29(const x:shortstring);
begin
Setstring('InputDir29',x);
end;

function TGamsOptions.GetInputDir30: shortstring;
begin
Result := Getstring('InputDir30');
end;
procedure TGamsOptions.SetInputDir30(const x:shortstring);
begin
Setstring('InputDir30',x);
end;

function TGamsOptions.GetInputDir31: shortstring;
begin
Result := Getstring('InputDir31');
end;
procedure TGamsOptions.SetInputDir31(const x:shortstring);
begin
Setstring('InputDir31',x);
end;

function TGamsOptions.GetInputDir32: shortstring;
begin
Result := Getstring('InputDir32');
end;
procedure TGamsOptions.SetInputDir32(const x:shortstring);
begin
Setstring('InputDir32',x);
end;

function TGamsOptions.GetInputDir33: shortstring;
begin
Result := Getstring('InputDir33');
end;
procedure TGamsOptions.SetInputDir33(const x:shortstring);
begin
Setstring('InputDir33',x);
end;

function TGamsOptions.GetInputDir34: shortstring;
begin
Result := Getstring('InputDir34');
end;
procedure TGamsOptions.SetInputDir34(const x:shortstring);
begin
Setstring('InputDir34',x);
end;

function TGamsOptions.GetInputDir35: shortstring;
begin
Result := Getstring('InputDir35');
end;
procedure TGamsOptions.SetInputDir35(const x:shortstring);
begin
Setstring('InputDir35',x);
end;

function TGamsOptions.GetInputDir36: shortstring;
begin
Result := Getstring('InputDir36');
end;
procedure TGamsOptions.SetInputDir36(const x:shortstring);
begin
Setstring('InputDir36',x);
end;

function TGamsOptions.GetInputDir37: shortstring;
begin
Result := Getstring('InputDir37');
end;
procedure TGamsOptions.SetInputDir37(const x:shortstring);
begin
Setstring('InputDir37',x);
end;

function TGamsOptions.GetInputDir38: shortstring;
begin
Result := Getstring('InputDir38');
end;
procedure TGamsOptions.SetInputDir38(const x:shortstring);
begin
Setstring('InputDir38',x);
end;

function TGamsOptions.GetInputDir39: shortstring;
begin
Result := Getstring('InputDir39');
end;
procedure TGamsOptions.SetInputDir39(const x:shortstring);
begin
Setstring('InputDir39',x);
end;

function TGamsOptions.GetInputDir40: shortstring;
begin
Result := Getstring('InputDir40');
end;
procedure TGamsOptions.SetInputDir40(const x:shortstring);
begin
Setstring('InputDir40',x);
end;

function TGamsOptions.GetInputDir: shortstring;
begin
Result := Getstring('InputDir');
end;
procedure TGamsOptions.SetInputDir(const x:shortstring);
begin
Setstring('InputDir',x);
end;

function TGamsOptions.GetLibIncDir: shortstring;
begin
Result := Getstring('LibIncDir');
end;
procedure TGamsOptions.SetLibIncDir(const x:shortstring);
begin
Setstring('LibIncDir',x);
end;

function TGamsOptions.GetSysIncDir: shortstring;
begin
Result := Getstring('SysIncDir');
end;
procedure TGamsOptions.SetSysIncDir(const x:shortstring);
begin
Setstring('SysIncDir',x);
end;

function TGamsOptions.GetUser1: shortstring;
begin
Result := Getstring('User1');
end;
procedure TGamsOptions.SetUser1(const x:shortstring);
begin
Setstring('User1',x);
end;

function TGamsOptions.GetUser2: shortstring;
begin
Result := Getstring('User2');
end;
procedure TGamsOptions.SetUser2(const x:shortstring);
begin
Setstring('User2',x);
end;

function TGamsOptions.GetUser3: shortstring;
begin
Result := Getstring('User3');
end;
procedure TGamsOptions.SetUser3(const x:shortstring);
begin
Setstring('User3',x);
end;

function TGamsOptions.GetUser4: shortstring;
begin
Result := Getstring('User4');
end;
procedure TGamsOptions.SetUser4(const x:shortstring);
begin
Setstring('User4',x);
end;

function TGamsOptions.GetUser5: shortstring;
begin
Result := Getstring('User5');
end;
procedure TGamsOptions.SetUser5(const x:shortstring);
begin
Setstring('User5',x);
end;

function TGamsOptions.GetForceWork: integer;
begin
Result := Getinteger('ForceWork');
end;
procedure TGamsOptions.SetForceWork(const x:integer);
begin
Setinteger('ForceWork',x);
end;

function TGamsOptions.GetCErr: integer;
begin
Result := Getinteger('CErr');
end;
procedure TGamsOptions.SetCErr(const x:integer);
begin
Setinteger('CErr',x);
end;

function TGamsOptions.GetFErr: shortstring;
begin
Result := Getstring('FErr');
end;
procedure TGamsOptions.SetFErr(const x:shortstring);
begin
Setstring('FErr',x);
end;

function TGamsOptions.GetOptFile: integer;
begin
Result := Getinteger('OptFile');
end;
procedure TGamsOptions.SetOptFile(const x:integer);
begin
Setinteger('OptFile',x);
end;

function TGamsOptions.GetFSave: integer;
begin
Result := Getinteger('FSave');
end;
procedure TGamsOptions.SetFSave(const x:integer);
begin
Setinteger('FSave',x);
end;

function TGamsOptions.GetNlCon: integer;
begin
Result := Getinteger('NlCon');
end;
procedure TGamsOptions.SetNlCon(const x:integer);
begin
Setinteger('NlCon',x);
end;

function TGamsOptions.GetDumpOpt: integer;
begin
Result := Getinteger('DumpOpt');
end;
procedure TGamsOptions.SetDumpOpt(const x:integer);
begin
Setinteger('DumpOpt',x);
end;

function TGamsOptions.GetErrMsg: integer;
begin
Result := Getinteger('ErrMsg');
end;
procedure TGamsOptions.SetErrMsg(const x:integer);
begin
Setinteger('ErrMsg',x);
end;

function TGamsOptions.GetOpt: integer;
begin
Result := Getinteger('Opt');
end;
procedure TGamsOptions.SetOpt(const x:integer);
begin
Setinteger('Opt',x);
end;

function TGamsOptions.GetRelPath: integer;
begin
Result := Getinteger('RelPath');
end;
procedure TGamsOptions.SetRelPath(const x:integer);
begin
Setinteger('RelPath',x);
end;

function TGamsOptions.GetGLanguage: integer;
begin
Result := Getinteger('GLanguage');
end;
procedure TGamsOptions.SetGLanguage(const x:integer);
begin
Setinteger('GLanguage',x);
end;

function TGamsOptions.GetGFinclude: integer;
begin
Result := Getinteger('GFinclude');
end;
procedure TGamsOptions.SetGFinclude(const x:integer);
begin
Setinteger('GFinclude',x);
end;

function TGamsOptions.GetUnitType: shortstring;
begin
Result := Getstring('UnitType');
end;
procedure TGamsOptions.SetUnitType(const x:shortstring);
begin
Setstring('UnitType',x);
end;

function TGamsOptions.GetGFImplicit: integer;
begin
Result := Getinteger('GFImplicit');
end;
procedure TGamsOptions.SetGFImplicit(const x:integer);
begin
Setinteger('GFImplicit',x);
end;

function TGamsOptions.GetGFExt: integer;
begin
Result := Getinteger('GFExt');
end;
procedure TGamsOptions.SetGFExt(const x:integer);
begin
Setinteger('GFExt',x);
end;

function TGamsOptions.GetStringChk: integer;
begin
Result := Getinteger('StringChk');
end;
procedure TGamsOptions.SetStringChk(const x:integer);
begin
Setinteger('StringChk',x);
end;

function TGamsOptions.GetReference: shortstring;
begin
Result := Getstring('Reference');
end;
procedure TGamsOptions.SetReference(const x:shortstring);
begin
Setstring('Reference',x);
end;

function TGamsOptions.GetOptDir: shortstring;
begin
Result := Getstring('OptDir');
end;
procedure TGamsOptions.SetOptDir(const x:shortstring);
begin
Setstring('OptDir',x);
end;

function TGamsOptions.GetExecErr: integer;
begin
Result := Getinteger('ExecErr');
end;
procedure TGamsOptions.SetExecErr(const x:integer);
begin
Setinteger('ExecErr',x);
end;

function TGamsOptions.GetErrorLog: integer;
begin
Result := Getinteger('ErrorLog');
end;
procedure TGamsOptions.SetErrorLog(const x:integer);
begin
Setinteger('ErrorLog',x);
end;

function TGamsOptions.GetLimRow: integer;
begin
Result := Getinteger('LimRow');
end;
procedure TGamsOptions.SetLimRow(const x:integer);
begin
Setinteger('LimRow',x);
end;

function TGamsOptions.GetLimCol: integer;
begin
Result := Getinteger('LimCol');
end;
procedure TGamsOptions.SetLimCol(const x:integer);
begin
Setinteger('LimCol',x);
end;

function TGamsOptions.GetCharSet: integer;
begin
Result := Getinteger('CharSet');
end;
procedure TGamsOptions.SetCharSet(const x:integer);
begin
Setinteger('CharSet',x);
end;

function TGamsOptions.GetKeep: integer;
begin
Result := Getinteger('Keep');
end;
procedure TGamsOptions.SetKeep(const x:integer);
begin
Setinteger('Keep',x);
end;

function TGamsOptions.GetIDE: integer;
begin
Result := Getinteger('IDE');
end;
procedure TGamsOptions.SetIDE(const x:integer);
begin
Setinteger('IDE',x);
end;

function TGamsOptions.GetTraceOpt: integer;
begin
Result := Getinteger('TraceOpt');
end;
procedure TGamsOptions.SetTraceOpt(const x:integer);
begin
Setinteger('TraceOpt',x);
end;

function TGamsOptions.GetGDX: shortstring;
begin
Result := Getstring('GDX');
end;
procedure TGamsOptions.SetGDX(const x:shortstring);
begin
Setstring('GDX',x);
end;

function TGamsOptions.GetIterLim: integer;
begin
Result := Getinteger('IterLim');
end;
procedure TGamsOptions.SetIterLim(const x:integer);
begin
Setinteger('IterLim',x);
end;

function TGamsOptions.GetDomLim: integer;
begin
Result := Getinteger('DomLim');
end;
procedure TGamsOptions.SetDomLim(const x:integer);
begin
Setinteger('DomLim',x);
end;

function TGamsOptions.GetResLim: double;
begin
Result := Getreal('ResLim');
end;
procedure TGamsOptions.SetResLim(const x:double);
begin
Setreal('ResLim',x);
end;

function TGamsOptions.GetOptCR: double;
begin
Result := Getreal('OptCR');
end;
procedure TGamsOptions.SetOptCR(const x:double);
begin
Setreal('OptCR',x);
end;

function TGamsOptions.GetOptCA: double;
begin
Result := Getreal('OptCA');
end;
procedure TGamsOptions.SetOptCA(const x:double);
begin
Setreal('OptCA',x);
end;

function TGamsOptions.GetSysOut: integer;
begin
Result := Getinteger('SysOut');
end;
procedure TGamsOptions.SetSysOut(const x:integer);
begin
Setinteger('SysOut',x);
end;

function TGamsOptions.GetSolPrint: integer;
begin
Result := Getinteger('SolPrint');
end;
procedure TGamsOptions.SetSolPrint(const x:integer);
begin
Setinteger('SolPrint',x);
end;

function TGamsOptions.GetBratio: double;
begin
Result := Getreal('Bratio');
end;
procedure TGamsOptions.SetBratio(const x:double);
begin
Setreal('Bratio',x);
end;

function TGamsOptions.GetHoldFixed: integer;
begin
Result := Getinteger('HoldFixed');
end;
procedure TGamsOptions.SetHoldFixed(const x:integer);
begin
Setinteger('HoldFixed',x);
end;

function TGamsOptions.GetNodLim: integer;
begin
Result := Getinteger('NodLim');
end;
procedure TGamsOptions.SetNodLim(const x:integer);
begin
Setinteger('NodLim',x);
end;

function TGamsOptions.GetWorkFactor: double;
begin
Result := Getreal('WorkFactor');
end;
procedure TGamsOptions.SetWorkFactor(const x:double);
begin
Setreal('WorkFactor',x);
end;

function TGamsOptions.GetWorkSpace: double;
begin
Result := Getreal('WorkSpace');
end;
procedure TGamsOptions.SetWorkSpace(const x:double);
begin
Setreal('WorkSpace',x);
end;

function TGamsOptions.GetForLim: integer;
begin
Result := Getinteger('ForLim');
end;
procedure TGamsOptions.SetForLim(const x:integer);
begin
Setinteger('ForLim',x);
end;

function TGamsOptions.GetSeed: integer;
begin
Result := Getinteger('Seed');
end;
procedure TGamsOptions.SetSeed(const x:integer);
begin
Setinteger('Seed',x);
end;

function TGamsOptions.GetOn115: integer;
begin
Result := Getinteger('On115');
end;
procedure TGamsOptions.SetOn115(const x:integer);
begin
Setinteger('On115',x);
end;

function TGamsOptions.GetExecMode: integer;
begin
Result := Getinteger('ExecMode');
end;
procedure TGamsOptions.SetExecMode(const x:integer);
begin
Setinteger('ExecMode',x);
end;

function TGamsOptions.GetInteractiveSolver: integer;
begin
Result := Getinteger('InteractiveSolver');
end;
procedure TGamsOptions.SetInteractiveSolver(const x:integer);
begin
Setinteger('InteractiveSolver',x);
end;

function TGamsOptions.GetPLicense: shortstring;
begin
Result := Getstring('PLicense');
end;
procedure TGamsOptions.SetPLicense(const x:shortstring);
begin
Setstring('PLicense',x);
end;

function TGamsOptions.GetJobTrace: shortstring;
begin
Result := Getstring('JobTrace');
end;
procedure TGamsOptions.SetJobTrace(const x:shortstring);
begin
Setstring('JobTrace',x);
end;

function TGamsOptions.GetWarnings: integer;
begin
Result := Getinteger('Warnings');
end;
procedure TGamsOptions.SetWarnings(const x:integer);
begin
Setinteger('Warnings',x);
end;

function TGamsOptions.GetTraceLevel: integer;
begin
Result := Getinteger('TraceLevel');
end;
procedure TGamsOptions.SetTraceLevel(const x:integer);
begin
Setinteger('TraceLevel',x);
end;

function TGamsOptions.GetSetType: integer;
begin
Result := Getinteger('SetType');
end;
procedure TGamsOptions.SetSetType(const x:integer);
begin
Setinteger('SetType',x);
end;

function TGamsOptions.GetTimer: integer;
begin
Result := Getinteger('Timer');
end;
procedure TGamsOptions.SetTimer(const x:integer);
begin
Setinteger('Timer',x);
end;

function TGamsOptions.GetFileCase: integer;
begin
Result := Getinteger('FileCase');
end;
procedure TGamsOptions.SetFileCase(const x:integer);
begin
Setinteger('FileCase',x);
end;

function TGamsOptions.GetSavePoint: integer;
begin
Result := Getinteger('SavePoint');
end;
procedure TGamsOptions.SetSavePoint(const x:integer);
begin
Setinteger('SavePoint',x);
end;

function TGamsOptions.GetSolveLink: integer;
begin
Result := Getinteger('SolveLink');
end;
procedure TGamsOptions.SetSolveLink(const x:integer);
begin
Setinteger('SolveLink',x);
end;

function TGamsOptions.GetSys11: integer;
begin
Result := Getinteger('Sys11');
end;
procedure TGamsOptions.SetSys11(const x:integer);
begin
Setinteger('Sys11',x);
end;

function TGamsOptions.GetSys12: integer;
begin
Result := Getinteger('Sys12');
end;
procedure TGamsOptions.SetSys12(const x:integer);
begin
Setinteger('Sys12',x);
end;

function TGamsOptions.GetZeroRes: double;
begin
Result := Getreal('ZeroRes');
end;
procedure TGamsOptions.SetZeroRes(const x:double);
begin
Setreal('ZeroRes',x);
end;

function TGamsOptions.GetZeroResRep: integer;
begin
Result := Getinteger('ZeroResRep');
end;
procedure TGamsOptions.SetZeroResRep(const x:integer);
begin
Setinteger('ZeroResRep',x);
end;

function TGamsOptions.GetHeapLimit: double;
begin
Result := Getreal('HeapLimit');
end;
procedure TGamsOptions.SetHeapLimit(const x:double);
begin
Setreal('HeapLimit',x);
end;

function TGamsOptions.GetScrExt: shortstring;
begin
Result := Getstring('ScrExt');
end;
procedure TGamsOptions.SetScrExt(const x:shortstring);
begin
Setstring('ScrExt',x);
end;

function TGamsOptions.GetProcDir: shortstring;
begin
Result := Getstring('ProcDir');
end;
procedure TGamsOptions.SetProcDir(const x:shortstring);
begin
Setstring('ProcDir',x);
end;

function TGamsOptions.GetgdxCompress: integer;
begin
Result := Getinteger('gdxCompress');
end;
procedure TGamsOptions.SetgdxCompress(const x:integer);
begin
Setinteger('gdxCompress',x);
end;

function TGamsOptions.GetgdxConvert: shortstring;
begin
Result := Getstring('gdxConvert');
end;
procedure TGamsOptions.SetgdxConvert(const x:shortstring);
begin
Setstring('gdxConvert',x);
end;

function TGamsOptions.GetAppendExpand: integer;
begin
Result := Getinteger('AppendExpand');
end;
procedure TGamsOptions.SetAppendExpand(const x:integer);
begin
Setinteger('AppendExpand',x);
end;

function TGamsOptions.GetETLim: double;
begin
Result := Getreal('ETLim');
end;
procedure TGamsOptions.SetETLim(const x:double);
begin
Setreal('ETLim',x);
end;

function TGamsOptions.GetProfileTol: double;
begin
Result := Getreal('ProfileTol');
end;
procedure TGamsOptions.SetProfileTol(const x:double);
begin
Setreal('ProfileTol',x);
end;

function TGamsOptions.GetProfileFile: shortstring;
begin
Result := Getstring('ProfileFile');
end;
procedure TGamsOptions.SetProfileFile(const x:shortstring);
begin
Setstring('ProfileFile',x);
end;

function TGamsOptions.GetMaxProcDir: integer;
begin
Result := Getinteger('MaxProcDir');
end;
procedure TGamsOptions.SetMaxProcDir(const x:integer);
begin
Setinteger('MaxProcDir',x);
end;

function TGamsOptions.GetInteger1: integer;
begin
Result := Getinteger('Integer1');
end;
procedure TGamsOptions.SetInteger1(const x:integer);
begin
Setinteger('Integer1',x);
end;

function TGamsOptions.GetInteger2: integer;
begin
Result := Getinteger('Integer2');
end;
procedure TGamsOptions.SetInteger2(const x:integer);
begin
Setinteger('Integer2',x);
end;

function TGamsOptions.GetInteger3: integer;
begin
Result := Getinteger('Integer3');
end;
procedure TGamsOptions.SetInteger3(const x:integer);
begin
Setinteger('Integer3',x);
end;

function TGamsOptions.GetInteger4: integer;
begin
Result := Getinteger('Integer4');
end;
procedure TGamsOptions.SetInteger4(const x:integer);
begin
Setinteger('Integer4',x);
end;

function TGamsOptions.GetInteger5: integer;
begin
Result := Getinteger('Integer5');
end;
procedure TGamsOptions.SetInteger5(const x:integer);
begin
Setinteger('Integer5',x);
end;

function TGamsOptions.GetGridScript: shortstring;
begin
Result := Getstring('GridScript');
end;
procedure TGamsOptions.SetGridScript(const x:shortstring);
begin
Setstring('GridScript',x);
end;

function TGamsOptions.GetThreads: integer;
begin
Result := Getinteger('Threads');
end;
procedure TGamsOptions.SetThreads(const x:integer);
begin
Setinteger('Threads',x);
end;

function TGamsOptions.GetUseDLL: integer;
begin
Result := Getinteger('UseDLL');
end;
procedure TGamsOptions.SetUseDLL(const x:integer);
begin
Setinteger('UseDLL',x);
end;

function TGamsOptions.GetDebug: integer;
begin
Result := Getinteger('Debug');
end;
procedure TGamsOptions.SetDebug(const x:integer);
begin
Setinteger('Debug',x);
end;

function TGamsOptions.GetPID2Error: integer;
begin
Result := Getinteger('PID2Error');
end;
procedure TGamsOptions.SetPID2Error(const x:integer);
begin
Setinteger('PID2Error',x);
end;

function TGamsOptions.RunExec(var Msg: shortstring; verbose: integer): integer;
begin
if pgxptr = nil
then
   if not gamsxCreateD(pgxptr, FSysDir, Msg)
   then
      begin
      Msg := '*** Error during initialization:' + Msg;
      Result := 1;
      exit;
      end;
Result := gamsxRunExecDLL(pgxptr, FOpt.OptGetHandle, FSysDir, verbose, Msg);
end;

function TGamsOptions.MessageCount: integer;
begin
Result := FOpt.optMessageCount;
end;

procedure TGamsOptions.GetMessage(N: integer; var Msg: shortstring);
var
   iType: integer;
begin
FOpt.OptGetMessage(N, Msg, iType);
end;

procedure TGamsOptions.WriteParameters(const fn: shortstring);
begin
FOpt.optWriteParameterFile(fn);
end;

procedure TGamsOptions.ErrorCount(var ierrors, iwarnings: integer);
begin
FOpt.optErrorCount(ierrors, iwarnings);
end;

end.
