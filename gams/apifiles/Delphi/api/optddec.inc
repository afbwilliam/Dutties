{ Delphi Object declarations generated by apiwrapper for GAMS Version 24.0.2 }

   function  optReadDefinition(const fn: ShortString): Integer;
   function  optReadParameterFile(const fn: ShortString): Integer;
   procedure optReadFromStr(const s: ShortString);
   function  optWriteParameterFile(const fn: ShortString): Integer;
   procedure optClearMessages;
   procedure optAddMessage(const info: ShortString);
   procedure optGetMessage(NrMsg: Integer; var{out} info: ShortString; var{out} iType: Integer);
   procedure optResetAll;
   procedure optResetAllRecent;
   procedure optResetRecentChanges;
   procedure optShowHelp(const HlpID: ShortString);
   function  optResetNr(ANr: Integer): Integer;
   function  optFindStr(const AName: ShortString; var{out} ANr: Integer; var{out} ARefNr: Integer): Integer;
   function  optGetInfoNr(ANr: Integer; var{out} ADefined: Integer; var{out} ADefinedR: Integer; var{out} ARefNr: Integer; var{out} ADataType: Integer; var{out} AOptType: Integer; var{out} ASubType: Integer): Integer;
   function  optGetValuesNr(ANr: Integer; var{out} ASName: ShortString; var{out} AIVal: Integer; var{out} ADVal: Double; var{out} ASVal: ShortString): Integer;
   function  optSetValuesNr(ANr: Integer; AIVal: Integer; ADVal: Double; const ASVal: ShortString): Integer;
   function  optSetValues2Nr(ANr: Integer; AIVal: Integer; ADVal: Double; const ASVal: ShortString): Integer;
   procedure optVersion(var{out} sversion: ShortString);
   procedure optDefinitionFile(var{out} sfilename: ShortString);
   function  optGetFromAnyStrList(idash: Integer; var{out} skey: ShortString; var{out} sval: ShortString): Integer;
   function  optGetFromListStr(const skey: ShortString; var{out} sval: ShortString): Integer;
   function  optListCountStr(const skey: ShortString): Integer;
   function  optReadFromListStr(const skey: ShortString; iPos: Integer; var{out} sval: ShortString): Integer;
   function  optSynonymCount: Integer;
   function  optGetSynonym(NrSyn: Integer; var{out} SSyn: ShortString; var{out} SName: ShortString): Integer;
   procedure optEchoSet(AIVal: Integer);
   function  optEOLOnlySet(AIVal: Integer): Integer;
   procedure optNoBoundsSet(AIVal: Integer);
   procedure optErrorCount(var{out} iErrors: Integer; var{out} iWarnings: Integer);
   function  optGetBoundsInt(ANr: Integer; var{out} ilval: Integer; var{out} ihval: Integer; var{out} idval: Integer): Integer;
   function  optGetBoundsDbl(ANr: Integer; var{out} dlval: Double; var{out} dhval: Double; var{out} ddval: Double): Integer;
   function  optGetDefaultStr(ANr: Integer; var{out} sval: ShortString): Integer;
   function  optGetIntNr(ANr: Integer; var{out} AIVal: Integer): Integer;
   function  optGetInt2Nr(ANr: Integer; var{out} AIVal: Integer): Integer;
   function  optSetIntNr(ANr: Integer; AIVal: Integer): Integer;
   function  optSetInt2Nr(ANr: Integer; AIVal: Integer): Integer;
   function  optGetStrNr(ANr: Integer; var{out} ASVal: ShortString): Integer;
   function  optGetOptHelpNr(ANr: Integer; var{out} AName: ShortString; var{out} AHc: Integer; var{out} AGroup: Integer): Integer;
   function  optGetEnumHelp(ANr: Integer; AOrd: Integer; var{out} AHc: Integer; var{out} AHelpStr: ShortString): Integer;
   function  optGetEnumStrNr(ANr: Integer; var{out} ASVal: ShortString; var{out} AOrd: Integer): Integer;
   function  optGetEnumCount(ANr: Integer; var{out} ACount: Integer): Integer;
   function  optGetEnumValue(ANr: Integer; AOrd: Integer; var{out} AValInt: Integer; var{out} AValStr: ShortString): Integer;
   function  optGetStr2Nr(ANr: Integer; var{out} ASVal: ShortString): Integer;
   function  optSetStrNr(ANr: Integer; const ASVal: ShortString): Integer;
   function  optSetStr2Nr(ANr: Integer; const ASVal: ShortString): Integer;
   function  optGetDblNr(ANr: Integer; var{out} ADVal: Double): Integer;
   function  optGetDbl2Nr(ANr: Integer; var{out} ADVal: Double): Integer;
   function  optSetDblNr(ANr: Integer; ADVal: Double): Integer;
   function  optSetDbl2Nr(ANr: Integer; ADVal: Double): Integer;
   function  optGetValStr(const AName: ShortString; var{out} ASVal: ShortString): Integer;
   function  optGetVal2Str(const AName: ShortString; var{out} ASVal: ShortString): Integer;
   function  optGetNameNr(ANr: Integer; var{out} ASName: ShortString): Integer;
   function  optGetDefinedNr(ANr: Integer; var{out} AIVal: Integer): Integer;
   function  optGetHelpNr(ANr: Integer; var{out} ASOpt: ShortString; var{out} ASHelp: ShortString): Integer;
   function  optGetGroupNr(ANr: Integer; var{out} AName: ShortString; var{out} AGroup: Integer; var{out} AHc: Integer; var{out} AHelp: ShortString): Integer;
   function  optGetGroupGrpNr(AGroup: Integer): Integer;
   function  optGetOptGroupNr(ANr: Integer): Integer;
   function  optGetDotOptNr(ANr: Integer; var{out} VEName: ShortString; var{out} AObjNr: Integer; var{out} ADim: Integer; var{out} AValue: Double): Integer;
   function  optGetDotOptUel(ANr: Integer; ADim: Integer; var{out} AUEL: ShortString): Integer;
   function  optGetVarEquMapNr(maptype: Integer; ANr: Integer; var{out} EquName: ShortString; var{out} VarName: ShortString; var{out} EquDim: Integer; var{out} VarDim: Integer; var{out} AValue: Integer): Integer;
   function  optGetEquVarEquMapNr(maptype: Integer; ANr: Integer; ADim: Integer; var{out} AIndex: ShortString): Integer;
   function  optGetVarVarEquMapNr(maptype: Integer; ANr: Integer; ADim: Integer; var{out} AIndex: ShortString): Integer;
   function  optVarEquMapCount(maptype: Integer; var{out} ANrErrors: Integer): Integer;
   function  optGetIndicatorNr(ANr: Integer; var{out} EquName: ShortString; var{out} VarName: ShortString; var{out} EquDim: Integer; var{out} VarDim: Integer; var{out} AValue: Integer): Integer;
   function  optGetEquIndicatorNr(ANr: Integer; ADim: Integer; var{out} AIndex: ShortString): Integer;
   function  optGetVarIndicatorNr(ANr: Integer; ADim: Integer; var{out} AIndex: ShortString): Integer;
   function  optIndicatorCount(var{out} ANrErrors: Integer): Integer;
   function  optDotOptCount(var{out} ANrErrors: Integer): Integer;
   function  optSetRefNr(ANr: Integer; ARefNr: Integer): Integer;
   function  optSetRefNrStr(const AOpt: ShortString; ARefNr: Integer): Integer;
   function  optGetConstName(cgroup: Integer; cindex: Integer; var{out} cname: ShortString): Integer;
   function  optGetTypeName(TNr: Integer; var{out} sTName: ShortString): Integer;
   function  optLookUp(const AOpt: ShortString): Integer;
   procedure optReadFromPChar(p: PChar);
   function  optGetNameOpt(const ASVal: ShortString; var{out} solver: ShortString; var{out} opt: Integer): Integer;
   function  optGetDefinedStr(const AName: ShortString): Boolean;
   function  optGetIntStr(const AName: ShortString): Integer;
   function  optGetDblStr(const AName: ShortString): Double;
   function  optGetStrStr(const AName: ShortString): ShortString;
   procedure optSetIntStr(const AName: ShortString; AIVal: Integer);
   procedure optSetDblStr(const AName: ShortString; ADVal: Double);
   procedure optSetStrStr(const AName: ShortString; const ASVal: ShortString);

   property optCount: Integer read GetCount;
   property optMessageCount: Integer read GetMessageCount;
   property optGroupCount: Integer read GetGroupCount;
   property optRecentEnabled: Integer read GetRecentEnabled write SetRecentEnabled;
{ End Delphi Object declarations generated by apiwrapper for GAMS Version 24.0.2 }
